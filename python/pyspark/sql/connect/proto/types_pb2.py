#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spark/connect/types.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x19spark/connect/types.proto\x12\rspark.connect"\xea%\n\x04Type\x12\x31\n\x04\x62ool\x18\x01 \x01(\x0b\x32\x1b.spark.connect.Type.BooleanH\x00R\x04\x62ool\x12(\n\x02i8\x18\x02 \x01(\x0b\x32\x16.spark.connect.Type.I8H\x00R\x02i8\x12+\n\x03i16\x18\x03 \x01(\x0b\x32\x17.spark.connect.Type.I16H\x00R\x03i16\x12+\n\x03i32\x18\x05 \x01(\x0b\x32\x17.spark.connect.Type.I32H\x00R\x03i32\x12+\n\x03i64\x18\x07 \x01(\x0b\x32\x17.spark.connect.Type.I64H\x00R\x03i64\x12.\n\x04\x66p32\x18\n \x01(\x0b\x32\x18.spark.connect.Type.FP32H\x00R\x04\x66p32\x12.\n\x04\x66p64\x18\x0b \x01(\x0b\x32\x18.spark.connect.Type.FP64H\x00R\x04\x66p64\x12\x34\n\x06string\x18\x0c \x01(\x0b\x32\x1a.spark.connect.Type.StringH\x00R\x06string\x12\x34\n\x06\x62inary\x18\r \x01(\x0b\x32\x1a.spark.connect.Type.BinaryH\x00R\x06\x62inary\x12=\n\ttimestamp\x18\x0e \x01(\x0b\x32\x1d.spark.connect.Type.TimestampH\x00R\ttimestamp\x12.\n\x04\x64\x61te\x18\x10 \x01(\x0b\x32\x18.spark.connect.Type.DateH\x00R\x04\x64\x61te\x12.\n\x04time\x18\x11 \x01(\x0b\x32\x18.spark.connect.Type.TimeH\x00R\x04time\x12G\n\rinterval_year\x18\x13 \x01(\x0b\x32 .spark.connect.Type.IntervalYearH\x00R\x0cintervalYear\x12\x44\n\x0cinterval_day\x18\x14 \x01(\x0b\x32\x1f.spark.connect.Type.IntervalDayH\x00R\x0bintervalDay\x12\x44\n\x0ctimestamp_tz\x18\x1d \x01(\x0b\x32\x1f.spark.connect.Type.TimestampTZH\x00R\x0btimestampTz\x12.\n\x04uuid\x18  \x01(\x0b\x32\x18.spark.connect.Type.UUIDH\x00R\x04uuid\x12>\n\nfixed_char\x18\x15 \x01(\x0b\x32\x1d.spark.connect.Type.FixedCharH\x00R\tfixedChar\x12\x37\n\x07varchar\x18\x16 \x01(\x0b\x32\x1b.spark.connect.Type.VarCharH\x00R\x07varchar\x12\x44\n\x0c\x66ixed_binary\x18\x17 \x01(\x0b\x32\x1f.spark.connect.Type.FixedBinaryH\x00R\x0b\x66ixedBinary\x12\x37\n\x07\x64\x65\x63imal\x18\x18 \x01(\x0b\x32\x1b.spark.connect.Type.DecimalH\x00R\x07\x64\x65\x63imal\x12\x34\n\x06struct\x18\x19 \x01(\x0b\x32\x1a.spark.connect.Type.StructH\x00R\x06struct\x12.\n\x04list\x18\x1b \x01(\x0b\x32\x18.spark.connect.Type.ListH\x00R\x04list\x12+\n\x03map\x18\x1c \x01(\x0b\x32\x17.spark.connect.Type.MapH\x00R\x03map\x12?\n\x1buser_defined_type_reference\x18\x1f \x01(\rH\x00R\x18userDefinedTypeReference\x1a\x86\x01\n\x07\x42oolean\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x81\x01\n\x02I8\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x82\x01\n\x03I16\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x82\x01\n\x03I32\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x82\x01\n\x03I64\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x83\x01\n\x04\x46P32\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x83\x01\n\x04\x46P64\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x85\x01\n\x06String\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x85\x01\n\x06\x42inary\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x88\x01\n\tTimestamp\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x83\x01\n\x04\x44\x61te\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x83\x01\n\x04Time\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x8a\x01\n\x0bTimestampTZ\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x8b\x01\n\x0cIntervalYear\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x8a\x01\n\x0bIntervalDay\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x83\x01\n\x04UUID\x12\x38\n\x18type_variation_reference\x18\x01 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x02 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\xa0\x01\n\tFixedChar\x12\x16\n\x06length\x18\x01 \x01(\x05R\x06length\x12\x38\n\x18type_variation_reference\x18\x02 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\x9e\x01\n\x07VarChar\x12\x16\n\x06length\x18\x01 \x01(\x05R\x06length\x12\x38\n\x18type_variation_reference\x18\x02 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\xa2\x01\n\x0b\x46ixedBinary\x12\x16\n\x06length\x18\x01 \x01(\x05R\x06length\x12\x38\n\x18type_variation_reference\x18\x02 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\xba\x01\n\x07\x44\x65\x63imal\x12\x14\n\x05scale\x18\x01 \x01(\x05R\x05scale\x12\x1c\n\tprecision\x18\x02 \x01(\x05R\tprecision\x12\x38\n\x18type_variation_reference\x18\x03 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x04 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\xb0\x01\n\x06Struct\x12)\n\x05types\x18\x01 \x03(\x0b\x32\x13.spark.connect.TypeR\x05types\x12\x38\n\x18type_variation_reference\x18\x02 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\xac\x01\n\x04List\x12\'\n\x04type\x18\x01 \x01(\x0b\x32\x13.spark.connect.TypeR\x04type\x12\x38\n\x18type_variation_reference\x18\x02 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x03 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability\x1a\xd4\x01\n\x03Map\x12%\n\x03key\x18\x01 \x01(\x0b\x32\x13.spark.connect.TypeR\x03key\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x13.spark.connect.TypeR\x05value\x12\x38\n\x18type_variation_reference\x18\x03 \x01(\rR\x16typeVariationReference\x12\x41\n\x0bnullability\x18\x04 \x01(\x0e\x32\x1f.spark.connect.Type.NullabilityR\x0bnullability"^\n\x0bNullability\x12\x1b\n\x17NULLABILITY_UNSPECIFIED\x10\x00\x12\x18\n\x14NULLABILITY_NULLABLE\x10\x01\x12\x18\n\x14NULLABILITY_REQUIRED\x10\x02\x42\x06\n\x04kindBM\n\x1eorg.apache.spark.connect.protoP\x01Z)github.com/databricks/spark-connect/protob\x06proto3'
)

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "spark.connect.types_pb2", globals())
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = (
        b"\n\036org.apache.spark.connect.protoP\001Z)github.com/databricks/spark-connect/proto"
    )
    _TYPE._serialized_start = 45
    _TYPE._serialized_end = 4887
    _TYPE_BOOLEAN._serialized_start = 1366
    _TYPE_BOOLEAN._serialized_end = 1500
    _TYPE_I8._serialized_start = 1503
    _TYPE_I8._serialized_end = 1632
    _TYPE_I16._serialized_start = 1635
    _TYPE_I16._serialized_end = 1765
    _TYPE_I32._serialized_start = 1768
    _TYPE_I32._serialized_end = 1898
    _TYPE_I64._serialized_start = 1901
    _TYPE_I64._serialized_end = 2031
    _TYPE_FP32._serialized_start = 2034
    _TYPE_FP32._serialized_end = 2165
    _TYPE_FP64._serialized_start = 2168
    _TYPE_FP64._serialized_end = 2299
    _TYPE_STRING._serialized_start = 2302
    _TYPE_STRING._serialized_end = 2435
    _TYPE_BINARY._serialized_start = 2438
    _TYPE_BINARY._serialized_end = 2571
    _TYPE_TIMESTAMP._serialized_start = 2574
    _TYPE_TIMESTAMP._serialized_end = 2710
    _TYPE_DATE._serialized_start = 2713
    _TYPE_DATE._serialized_end = 2844
    _TYPE_TIME._serialized_start = 2847
    _TYPE_TIME._serialized_end = 2978
    _TYPE_TIMESTAMPTZ._serialized_start = 2981
    _TYPE_TIMESTAMPTZ._serialized_end = 3119
    _TYPE_INTERVALYEAR._serialized_start = 3122
    _TYPE_INTERVALYEAR._serialized_end = 3261
    _TYPE_INTERVALDAY._serialized_start = 3264
    _TYPE_INTERVALDAY._serialized_end = 3402
    _TYPE_UUID._serialized_start = 3405
    _TYPE_UUID._serialized_end = 3536
    _TYPE_FIXEDCHAR._serialized_start = 3539
    _TYPE_FIXEDCHAR._serialized_end = 3699
    _TYPE_VARCHAR._serialized_start = 3702
    _TYPE_VARCHAR._serialized_end = 3860
    _TYPE_FIXEDBINARY._serialized_start = 3863
    _TYPE_FIXEDBINARY._serialized_end = 4025
    _TYPE_DECIMAL._serialized_start = 4028
    _TYPE_DECIMAL._serialized_end = 4214
    _TYPE_STRUCT._serialized_start = 4217
    _TYPE_STRUCT._serialized_end = 4393
    _TYPE_LIST._serialized_start = 4396
    _TYPE_LIST._serialized_end = 4568
    _TYPE_MAP._serialized_start = 4571
    _TYPE_MAP._serialized_end = 4783
    _TYPE_NULLABILITY._serialized_start = 4785
    _TYPE_NULLABILITY._serialized_end = 4879
# @@protoc_insertion_point(module_scope)
