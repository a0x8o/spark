== Physical Plan ==
* Sort (99)
+- Exchange (98)
   +- * Project (97)
      +- * BroadcastHashJoin Inner BuildRight (96)
         :- * Project (82)
         :  +- * BroadcastHashJoin Inner BuildRight (81)
         :     :- * BroadcastHashJoin Inner BuildRight (67)
         :     :  :- * Project (53)
         :     :  :  +- * BroadcastHashJoin Inner BuildRight (52)
         :     :  :     :- * BroadcastHashJoin Inner BuildRight (35)
         :     :  :     :  :- * HashAggregate (18)
         :     :  :     :  :  +- Exchange (17)
         :     :  :     :  :     +- * HashAggregate (16)
         :     :  :     :  :        +- * Project (15)
         :     :  :     :  :           +- * BroadcastHashJoin Inner BuildRight (14)
         :     :  :     :  :              :- * Project (9)
         :     :  :     :  :              :  +- * BroadcastHashJoin Inner BuildRight (8)
         :     :  :     :  :              :     :- * Filter (3)
         :     :  :     :  :              :     :  +- * ColumnarToRow (2)
         :     :  :     :  :              :     :     +- Scan parquet default.store_sales (1)
         :     :  :     :  :              :     +- BroadcastExchange (7)
         :     :  :     :  :              :        +- * Filter (6)
         :     :  :     :  :              :           +- * ColumnarToRow (5)
         :     :  :     :  :              :              +- Scan parquet default.date_dim (4)
         :     :  :     :  :              +- BroadcastExchange (13)
         :     :  :     :  :                 +- * Filter (12)
         :     :  :     :  :                    +- * ColumnarToRow (11)
         :     :  :     :  :                       +- Scan parquet default.customer_address (10)
         :     :  :     :  +- BroadcastExchange (34)
         :     :  :     :     +- * HashAggregate (33)
         :     :  :     :        +- Exchange (32)
         :     :  :     :           +- * HashAggregate (31)
         :     :  :     :              +- * Project (30)
         :     :  :     :                 +- * BroadcastHashJoin Inner BuildRight (29)
         :     :  :     :                    :- * Project (27)
         :     :  :     :                    :  +- * BroadcastHashJoin Inner BuildRight (26)
         :     :  :     :                    :     :- * Filter (21)
         :     :  :     :                    :     :  +- * ColumnarToRow (20)
         :     :  :     :                    :     :     +- Scan parquet default.store_sales (19)
         :     :  :     :                    :     +- BroadcastExchange (25)
         :     :  :     :                    :        +- * Filter (24)
         :     :  :     :                    :           +- * ColumnarToRow (23)
         :     :  :     :                    :              +- Scan parquet default.date_dim (22)
         :     :  :     :                    +- ReusedExchange (28)
         :     :  :     +- BroadcastExchange (51)
         :     :  :        +- * HashAggregate (50)
         :     :  :           +- Exchange (49)
         :     :  :              +- * HashAggregate (48)
         :     :  :                 +- * Project (47)
         :     :  :                    +- * BroadcastHashJoin Inner BuildRight (46)
         :     :  :                       :- * Project (44)
         :     :  :                       :  +- * BroadcastHashJoin Inner BuildRight (43)
         :     :  :                       :     :- * Filter (38)
         :     :  :                       :     :  +- * ColumnarToRow (37)
         :     :  :                       :     :     +- Scan parquet default.store_sales (36)
         :     :  :                       :     +- BroadcastExchange (42)
         :     :  :                       :        +- * Filter (41)
         :     :  :                       :           +- * ColumnarToRow (40)
         :     :  :                       :              +- Scan parquet default.date_dim (39)
         :     :  :                       +- ReusedExchange (45)
         :     :  +- BroadcastExchange (66)
         :     :     +- * HashAggregate (65)
         :     :        +- Exchange (64)
         :     :           +- * HashAggregate (63)
         :     :              +- * Project (62)
         :     :                 +- * BroadcastHashJoin Inner BuildRight (61)
         :     :                    :- * Project (59)
         :     :                    :  +- * BroadcastHashJoin Inner BuildRight (58)
         :     :                    :     :- * Filter (56)
         :     :                    :     :  +- * ColumnarToRow (55)
         :     :                    :     :     +- Scan parquet default.web_sales (54)
         :     :                    :     +- ReusedExchange (57)
         :     :                    +- ReusedExchange (60)
         :     +- BroadcastExchange (80)
         :        +- * HashAggregate (79)
         :           +- Exchange (78)
         :              +- * HashAggregate (77)
         :                 +- * Project (76)
         :                    +- * BroadcastHashJoin Inner BuildRight (75)
         :                       :- * Project (73)
         :                       :  +- * BroadcastHashJoin Inner BuildRight (72)
         :                       :     :- * Filter (70)
         :                       :     :  +- * ColumnarToRow (69)
         :                       :     :     +- Scan parquet default.web_sales (68)
         :                       :     +- ReusedExchange (71)
         :                       +- ReusedExchange (74)
         +- BroadcastExchange (95)
            +- * HashAggregate (94)
               +- Exchange (93)
                  +- * HashAggregate (92)
                     +- * Project (91)
                        +- * BroadcastHashJoin Inner BuildRight (90)
                           :- * Project (88)
                           :  +- * BroadcastHashJoin Inner BuildRight (87)
                           :     :- * Filter (85)
                           :     :  +- * ColumnarToRow (84)
                           :     :     +- Scan parquet default.web_sales (83)
                           :     +- ReusedExchange (86)
                           +- ReusedExchange (89)


(1) Scan parquet default.store_sales
Output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#3), dynamicpruningexpression(ss_sold_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]

(3) Filter [codegen id : 3]
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Condition : isnotnull(ss_addr_sk#1)

(4) Scan parquet default.date_dim
Output [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]

(6) Filter [codegen id : 1]
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Condition : ((((isnotnull(d_qoy#7) AND isnotnull(d_year#6)) AND (d_qoy#7 = 1)) AND (d_year#6 = 2000)) AND isnotnull(d_date_sk#5))

(7) BroadcastExchange
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#8]

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#3]
Right keys [1]: [d_date_sk#5]
Join condition: None

(9) Project [codegen id : 3]
Output [4]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#6, d_qoy#7]
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3, d_date_sk#5, d_year#6, d_qoy#7]

(10) Scan parquet default.customer_address
Output [2]: [ca_address_sk#9, ca_county#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(11) ColumnarToRow [codegen id : 2]
Input [2]: [ca_address_sk#9, ca_county#10]

(12) Filter [codegen id : 2]
Input [2]: [ca_address_sk#9, ca_county#10]
Condition : (isnotnull(ca_address_sk#9) AND isnotnull(ca_county#10))

(13) BroadcastExchange
Input [2]: [ca_address_sk#9, ca_county#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#11]

(14) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_addr_sk#1]
Right keys [1]: [ca_address_sk#9]
Join condition: None

(15) Project [codegen id : 3]
Output [4]: [ss_ext_sales_price#2, d_year#6, d_qoy#7, ca_county#10]
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#6, d_qoy#7, ca_address_sk#9, ca_county#10]

(16) HashAggregate [codegen id : 3]
Input [4]: [ss_ext_sales_price#2, d_year#6, d_qoy#7, ca_county#10]
Keys [3]: [ca_county#10, d_qoy#7, d_year#6]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum#12]
Results [4]: [ca_county#10, d_qoy#7, d_year#6, sum#13]

(17) Exchange
Input [4]: [ca_county#10, d_qoy#7, d_year#6, sum#13]
Arguments: hashpartitioning(ca_county#10, d_qoy#7, d_year#6, 5), ENSURE_REQUIREMENTS, [id=#14]

(18) HashAggregate [codegen id : 24]
Input [4]: [ca_county#10, d_qoy#7, d_year#6, sum#13]
Keys [3]: [ca_county#10, d_qoy#7, d_year#6]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#2))#15]
Results [3]: [ca_county#10, d_year#6, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#2))#15,17,2) AS store_sales#16]

(19) Scan parquet default.store_sales
Output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#3), dynamicpruningexpression(ss_sold_date_sk#3 IN dynamicpruning#17)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(20) ColumnarToRow [codegen id : 6]
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]

(21) Filter [codegen id : 6]
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Condition : isnotnull(ss_addr_sk#1)

(22) Scan parquet default.date_dim
Output [3]: [d_date_sk#18, d_year#19, d_qoy#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(23) ColumnarToRow [codegen id : 4]
Input [3]: [d_date_sk#18, d_year#19, d_qoy#20]

(24) Filter [codegen id : 4]
Input [3]: [d_date_sk#18, d_year#19, d_qoy#20]
Condition : ((((isnotnull(d_qoy#20) AND isnotnull(d_year#19)) AND (d_qoy#20 = 2)) AND (d_year#19 = 2000)) AND isnotnull(d_date_sk#18))

(25) BroadcastExchange
Input [3]: [d_date_sk#18, d_year#19, d_qoy#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#21]

(26) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#3]
Right keys [1]: [d_date_sk#18]
Join condition: None

(27) Project [codegen id : 6]
Output [4]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#19, d_qoy#20]
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3, d_date_sk#18, d_year#19, d_qoy#20]

(28) ReusedExchange [Reuses operator id: 13]
Output [2]: [ca_address_sk#22, ca_county#23]

(29) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_addr_sk#1]
Right keys [1]: [ca_address_sk#22]
Join condition: None

(30) Project [codegen id : 6]
Output [4]: [ss_ext_sales_price#2, d_year#19, d_qoy#20, ca_county#23]
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#19, d_qoy#20, ca_address_sk#22, ca_county#23]

(31) HashAggregate [codegen id : 6]
Input [4]: [ss_ext_sales_price#2, d_year#19, d_qoy#20, ca_county#23]
Keys [3]: [ca_county#23, d_qoy#20, d_year#19]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum#24]
Results [4]: [ca_county#23, d_qoy#20, d_year#19, sum#25]

(32) Exchange
Input [4]: [ca_county#23, d_qoy#20, d_year#19, sum#25]
Arguments: hashpartitioning(ca_county#23, d_qoy#20, d_year#19, 5), ENSURE_REQUIREMENTS, [id=#26]

(33) HashAggregate [codegen id : 7]
Input [4]: [ca_county#23, d_qoy#20, d_year#19, sum#25]
Keys [3]: [ca_county#23, d_qoy#20, d_year#19]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#2))#27]
Results [2]: [ca_county#23, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#2))#27,17,2) AS store_sales#28]

(34) BroadcastExchange
Input [2]: [ca_county#23, store_sales#28]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#29]

(35) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#10]
Right keys [1]: [ca_county#23]
Join condition: None

(36) Scan parquet default.store_sales
Output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#3), dynamicpruningexpression(ss_sold_date_sk#3 IN dynamicpruning#30)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(37) ColumnarToRow [codegen id : 10]
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]

(38) Filter [codegen id : 10]
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Condition : isnotnull(ss_addr_sk#1)

(39) Scan parquet default.date_dim
Output [3]: [d_date_sk#31, d_year#32, d_qoy#33]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(40) ColumnarToRow [codegen id : 8]
Input [3]: [d_date_sk#31, d_year#32, d_qoy#33]

(41) Filter [codegen id : 8]
Input [3]: [d_date_sk#31, d_year#32, d_qoy#33]
Condition : ((((isnotnull(d_qoy#33) AND isnotnull(d_year#32)) AND (d_qoy#33 = 3)) AND (d_year#32 = 2000)) AND isnotnull(d_date_sk#31))

(42) BroadcastExchange
Input [3]: [d_date_sk#31, d_year#32, d_qoy#33]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#34]

(43) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ss_sold_date_sk#3]
Right keys [1]: [d_date_sk#31]
Join condition: None

(44) Project [codegen id : 10]
Output [4]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#32, d_qoy#33]
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3, d_date_sk#31, d_year#32, d_qoy#33]

(45) ReusedExchange [Reuses operator id: 13]
Output [2]: [ca_address_sk#35, ca_county#36]

(46) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [ss_addr_sk#1]
Right keys [1]: [ca_address_sk#35]
Join condition: None

(47) Project [codegen id : 10]
Output [4]: [ss_ext_sales_price#2, d_year#32, d_qoy#33, ca_county#36]
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#32, d_qoy#33, ca_address_sk#35, ca_county#36]

(48) HashAggregate [codegen id : 10]
Input [4]: [ss_ext_sales_price#2, d_year#32, d_qoy#33, ca_county#36]
Keys [3]: [ca_county#36, d_qoy#33, d_year#32]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum#37]
Results [4]: [ca_county#36, d_qoy#33, d_year#32, sum#38]

(49) Exchange
Input [4]: [ca_county#36, d_qoy#33, d_year#32, sum#38]
Arguments: hashpartitioning(ca_county#36, d_qoy#33, d_year#32, 5), ENSURE_REQUIREMENTS, [id=#39]

(50) HashAggregate [codegen id : 11]
Input [4]: [ca_county#36, d_qoy#33, d_year#32, sum#38]
Keys [3]: [ca_county#36, d_qoy#33, d_year#32]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#2))#40]
Results [2]: [ca_county#36, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#2))#40,17,2) AS store_sales#41]

(51) BroadcastExchange
Input [2]: [ca_county#36, store_sales#41]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#42]

(52) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#23]
Right keys [1]: [ca_county#36]
Join condition: None

(53) Project [codegen id : 24]
Output [5]: [ca_county#10, d_year#6, store_sales#16, store_sales#28, store_sales#41]
Input [7]: [ca_county#10, d_year#6, store_sales#16, ca_county#23, store_sales#28, ca_county#36, store_sales#41]

(54) Scan parquet default.web_sales
Output [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#45), dynamicpruningexpression(ws_sold_date_sk#45 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(55) ColumnarToRow [codegen id : 14]
Input [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]

(56) Filter [codegen id : 14]
Input [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Condition : isnotnull(ws_bill_addr_sk#43)

(57) ReusedExchange [Reuses operator id: 7]
Output [3]: [d_date_sk#46, d_year#47, d_qoy#48]

(58) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [ws_sold_date_sk#45]
Right keys [1]: [d_date_sk#46]
Join condition: None

(59) Project [codegen id : 14]
Output [4]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#47, d_qoy#48]
Input [6]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45, d_date_sk#46, d_year#47, d_qoy#48]

(60) ReusedExchange [Reuses operator id: 13]
Output [2]: [ca_address_sk#49, ca_county#50]

(61) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [ws_bill_addr_sk#43]
Right keys [1]: [ca_address_sk#49]
Join condition: None

(62) Project [codegen id : 14]
Output [4]: [ws_ext_sales_price#44, d_year#47, d_qoy#48, ca_county#50]
Input [6]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#47, d_qoy#48, ca_address_sk#49, ca_county#50]

(63) HashAggregate [codegen id : 14]
Input [4]: [ws_ext_sales_price#44, d_year#47, d_qoy#48, ca_county#50]
Keys [3]: [ca_county#50, d_qoy#48, d_year#47]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#44))]
Aggregate Attributes [1]: [sum#51]
Results [4]: [ca_county#50, d_qoy#48, d_year#47, sum#52]

(64) Exchange
Input [4]: [ca_county#50, d_qoy#48, d_year#47, sum#52]
Arguments: hashpartitioning(ca_county#50, d_qoy#48, d_year#47, 5), ENSURE_REQUIREMENTS, [id=#53]

(65) HashAggregate [codegen id : 15]
Input [4]: [ca_county#50, d_qoy#48, d_year#47, sum#52]
Keys [3]: [ca_county#50, d_qoy#48, d_year#47]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#44))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#44))#54]
Results [2]: [ca_county#50, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#44))#54,17,2) AS web_sales#55]

(66) BroadcastExchange
Input [2]: [ca_county#50, web_sales#55]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#56]

(67) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#10]
Right keys [1]: [ca_county#50]
Join condition: None

(68) Scan parquet default.web_sales
Output [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#45), dynamicpruningexpression(ws_sold_date_sk#45 IN dynamicpruning#17)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(69) ColumnarToRow [codegen id : 18]
Input [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]

(70) Filter [codegen id : 18]
Input [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Condition : isnotnull(ws_bill_addr_sk#43)

(71) ReusedExchange [Reuses operator id: 25]
Output [3]: [d_date_sk#57, d_year#58, d_qoy#59]

(72) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_sold_date_sk#45]
Right keys [1]: [d_date_sk#57]
Join condition: None

(73) Project [codegen id : 18]
Output [4]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#58, d_qoy#59]
Input [6]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45, d_date_sk#57, d_year#58, d_qoy#59]

(74) ReusedExchange [Reuses operator id: 13]
Output [2]: [ca_address_sk#60, ca_county#61]

(75) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ws_bill_addr_sk#43]
Right keys [1]: [ca_address_sk#60]
Join condition: None

(76) Project [codegen id : 18]
Output [4]: [ws_ext_sales_price#44, d_year#58, d_qoy#59, ca_county#61]
Input [6]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#58, d_qoy#59, ca_address_sk#60, ca_county#61]

(77) HashAggregate [codegen id : 18]
Input [4]: [ws_ext_sales_price#44, d_year#58, d_qoy#59, ca_county#61]
Keys [3]: [ca_county#61, d_qoy#59, d_year#58]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#44))]
Aggregate Attributes [1]: [sum#62]
Results [4]: [ca_county#61, d_qoy#59, d_year#58, sum#63]

(78) Exchange
Input [4]: [ca_county#61, d_qoy#59, d_year#58, sum#63]
Arguments: hashpartitioning(ca_county#61, d_qoy#59, d_year#58, 5), ENSURE_REQUIREMENTS, [id=#64]

(79) HashAggregate [codegen id : 19]
Input [4]: [ca_county#61, d_qoy#59, d_year#58, sum#63]
Keys [3]: [ca_county#61, d_qoy#59, d_year#58]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#44))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#44))#65]
Results [2]: [ca_county#61, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#44))#65,17,2) AS web_sales#66]

(80) BroadcastExchange
Input [2]: [ca_county#61, web_sales#66]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#67]

(81) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#50]
Right keys [1]: [ca_county#61]
Join condition: (CASE WHEN (web_sales#55 > 0.00) THEN CheckOverflow((promote_precision(web_sales#66) / promote_precision(web_sales#55)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#16 > 0.00) THEN CheckOverflow((promote_precision(store_sales#28) / promote_precision(store_sales#16)), DecimalType(37,20), true) ELSE null END)

(82) Project [codegen id : 24]
Output [8]: [ca_county#10, d_year#6, store_sales#16, store_sales#28, store_sales#41, ca_county#50, web_sales#55, web_sales#66]
Input [9]: [ca_county#10, d_year#6, store_sales#16, store_sales#28, store_sales#41, ca_county#50, web_sales#55, ca_county#61, web_sales#66]

(83) Scan parquet default.web_sales
Output [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#45), dynamicpruningexpression(ws_sold_date_sk#45 IN dynamicpruning#30)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(84) ColumnarToRow [codegen id : 22]
Input [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]

(85) Filter [codegen id : 22]
Input [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Condition : isnotnull(ws_bill_addr_sk#43)

(86) ReusedExchange [Reuses operator id: 42]
Output [3]: [d_date_sk#68, d_year#69, d_qoy#70]

(87) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [ws_sold_date_sk#45]
Right keys [1]: [d_date_sk#68]
Join condition: None

(88) Project [codegen id : 22]
Output [4]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#69, d_qoy#70]
Input [6]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45, d_date_sk#68, d_year#69, d_qoy#70]

(89) ReusedExchange [Reuses operator id: 13]
Output [2]: [ca_address_sk#71, ca_county#72]

(90) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [ws_bill_addr_sk#43]
Right keys [1]: [ca_address_sk#71]
Join condition: None

(91) Project [codegen id : 22]
Output [4]: [ws_ext_sales_price#44, d_year#69, d_qoy#70, ca_county#72]
Input [6]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#69, d_qoy#70, ca_address_sk#71, ca_county#72]

(92) HashAggregate [codegen id : 22]
Input [4]: [ws_ext_sales_price#44, d_year#69, d_qoy#70, ca_county#72]
Keys [3]: [ca_county#72, d_qoy#70, d_year#69]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#44))]
Aggregate Attributes [1]: [sum#73]
Results [4]: [ca_county#72, d_qoy#70, d_year#69, sum#74]

(93) Exchange
Input [4]: [ca_county#72, d_qoy#70, d_year#69, sum#74]
Arguments: hashpartitioning(ca_county#72, d_qoy#70, d_year#69, 5), ENSURE_REQUIREMENTS, [id=#75]

(94) HashAggregate [codegen id : 23]
Input [4]: [ca_county#72, d_qoy#70, d_year#69, sum#74]
Keys [3]: [ca_county#72, d_qoy#70, d_year#69]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#44))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#44))#76]
Results [2]: [ca_county#72, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#44))#76,17,2) AS web_sales#77]

(95) BroadcastExchange
Input [2]: [ca_county#72, web_sales#77]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#78]

(96) BroadcastHashJoin [codegen id : 24]
Left keys [1]: [ca_county#50]
Right keys [1]: [ca_county#72]
Join condition: (CASE WHEN (web_sales#66 > 0.00) THEN CheckOverflow((promote_precision(web_sales#77) / promote_precision(web_sales#66)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#28 > 0.00) THEN CheckOverflow((promote_precision(store_sales#41) / promote_precision(store_sales#28)), DecimalType(37,20), true) ELSE null END)

(97) Project [codegen id : 24]
Output [6]: [ca_county#10, d_year#6, CheckOverflow((promote_precision(web_sales#66) / promote_precision(web_sales#55)), DecimalType(37,20), true) AS web_q1_q2_increase#79, CheckOverflow((promote_precision(store_sales#28) / promote_precision(store_sales#16)), DecimalType(37,20), true) AS store_q1_q2_increase#80, CheckOverflow((promote_precision(web_sales#77) / promote_precision(web_sales#66)), DecimalType(37,20), true) AS web_q2_q3_increase#81, CheckOverflow((promote_precision(store_sales#41) / promote_precision(store_sales#28)), DecimalType(37,20), true) AS store_q2_q3_increase#82]
Input [10]: [ca_county#10, d_year#6, store_sales#16, store_sales#28, store_sales#41, ca_county#50, web_sales#55, web_sales#66, ca_county#72, web_sales#77]

(98) Exchange
Input [6]: [ca_county#10, d_year#6, web_q1_q2_increase#79, store_q1_q2_increase#80, web_q2_q3_increase#81, store_q2_q3_increase#82]
Arguments: rangepartitioning(ca_county#10 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, [id=#83]

(99) Sort [codegen id : 25]
Input [6]: [ca_county#10, d_year#6, web_q1_q2_increase#79, store_q1_q2_increase#80, web_q2_q3_increase#81, store_q2_q3_increase#82]
Arguments: [ca_county#10 ASC NULLS FIRST], true, 0

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#3 IN dynamicpruning#4
ReusedExchange (100)


(100) ReusedExchange [Reuses operator id: 7]
Output [3]: [d_date_sk#5, d_year#6, d_qoy#7]

Subquery:2 Hosting operator id = 19 Hosting Expression = ss_sold_date_sk#3 IN dynamicpruning#17
ReusedExchange (101)


(101) ReusedExchange [Reuses operator id: 25]
Output [3]: [d_date_sk#18, d_year#19, d_qoy#20]

Subquery:3 Hosting operator id = 36 Hosting Expression = ss_sold_date_sk#3 IN dynamicpruning#30
ReusedExchange (102)


(102) ReusedExchange [Reuses operator id: 42]
Output [3]: [d_date_sk#31, d_year#32, d_qoy#33]

Subquery:4 Hosting operator id = 54 Hosting Expression = ws_sold_date_sk#45 IN dynamicpruning#4

Subquery:5 Hosting operator id = 68 Hosting Expression = ws_sold_date_sk#45 IN dynamicpruning#17

Subquery:6 Hosting operator id = 83 Hosting Expression = ws_sold_date_sk#45 IN dynamicpruning#30


