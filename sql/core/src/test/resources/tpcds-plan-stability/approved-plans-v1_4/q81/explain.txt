== Physical Plan ==
TakeOrderedAndProject (52)
+- * Project (51)
   +- * BroadcastHashJoin Inner BuildRight (50)
      :- * Project (45)
      :  +- * BroadcastHashJoin Inner BuildRight (44)
      :     :- * Project (39)
      :     :  +- * BroadcastHashJoin Inner BuildRight (38)
      :     :     :- * Filter (20)
      :     :     :  +- * HashAggregate (19)
      :     :     :     +- Exchange (18)
      :     :     :        +- * HashAggregate (17)
      :     :     :           +- * Project (16)
      :     :     :              +- * BroadcastHashJoin Inner BuildRight (15)
      :     :     :                 :- * Project (10)
      :     :     :                 :  +- * BroadcastHashJoin Inner BuildRight (9)
      :     :     :                 :     :- * Filter (3)
      :     :     :                 :     :  +- * ColumnarToRow (2)
      :     :     :                 :     :     +- Scan parquet default.catalog_returns (1)
      :     :     :                 :     +- BroadcastExchange (8)
      :     :     :                 :        +- * Project (7)
      :     :     :                 :           +- * Filter (6)
      :     :     :                 :              +- * ColumnarToRow (5)
      :     :     :                 :                 +- Scan parquet default.date_dim (4)
      :     :     :                 +- BroadcastExchange (14)
      :     :     :                    +- * Filter (13)
      :     :     :                       +- * ColumnarToRow (12)
      :     :     :                          +- Scan parquet default.customer_address (11)
      :     :     +- BroadcastExchange (37)
      :     :        +- * Filter (36)
      :     :           +- * HashAggregate (35)
      :     :              +- Exchange (34)
      :     :                 +- * HashAggregate (33)
      :     :                    +- * HashAggregate (32)
      :     :                       +- Exchange (31)
      :     :                          +- * HashAggregate (30)
      :     :                             +- * Project (29)
      :     :                                +- * BroadcastHashJoin Inner BuildRight (28)
      :     :                                   :- * Project (26)
      :     :                                   :  +- * BroadcastHashJoin Inner BuildRight (25)
      :     :                                   :     :- * Filter (23)
      :     :                                   :     :  +- * ColumnarToRow (22)
      :     :                                   :     :     +- Scan parquet default.catalog_returns (21)
      :     :                                   :     +- ReusedExchange (24)
      :     :                                   +- ReusedExchange (27)
      :     +- BroadcastExchange (43)
      :        +- * Filter (42)
      :           +- * ColumnarToRow (41)
      :              +- Scan parquet default.customer (40)
      +- BroadcastExchange (49)
         +- * Filter (48)
            +- * ColumnarToRow (47)
               +- Scan parquet default.customer_address (46)


(1) Scan parquet default.catalog_returns
Output [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#4), dynamicpruningexpression(cr_returned_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer_sk)]
ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]

(3) Filter [codegen id : 3]
Input [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Condition : (isnotnull(cr_returning_addr_sk#2) AND isnotnull(cr_returning_customer_sk#1))

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#6, d_year#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#6, d_year#7]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#6, d_year#7]
Condition : ((isnotnull(d_year#7) AND (d_year#7 = 2000)) AND isnotnull(d_date_sk#6))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#6]
Input [2]: [d_date_sk#6, d_year#7]

(8) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#8]

(9) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [cr_returned_date_sk#4]
Right keys [1]: [d_date_sk#6]
Join condition: None

(10) Project [codegen id : 3]
Output [3]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3]
Input [5]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4, d_date_sk#6]

(11) Scan parquet default.customer_address
Output [2]: [ca_address_sk#9, ca_state#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(12) ColumnarToRow [codegen id : 2]
Input [2]: [ca_address_sk#9, ca_state#10]

(13) Filter [codegen id : 2]
Input [2]: [ca_address_sk#9, ca_state#10]
Condition : (isnotnull(ca_address_sk#9) AND isnotnull(ca_state#10))

(14) BroadcastExchange
Input [2]: [ca_address_sk#9, ca_state#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#11]

(15) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [cr_returning_addr_sk#2]
Right keys [1]: [ca_address_sk#9]
Join condition: None

(16) Project [codegen id : 3]
Output [3]: [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#10]
Input [5]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, ca_address_sk#9, ca_state#10]

(17) HashAggregate [codegen id : 3]
Input [3]: [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#10]
Keys [2]: [cr_returning_customer_sk#1, ca_state#10]
Functions [1]: [partial_sum(UnscaledValue(cr_return_amt_inc_tax#3))]
Aggregate Attributes [1]: [sum#12]
Results [3]: [cr_returning_customer_sk#1, ca_state#10, sum#13]

(18) Exchange
Input [3]: [cr_returning_customer_sk#1, ca_state#10, sum#13]
Arguments: hashpartitioning(cr_returning_customer_sk#1, ca_state#10, 5), ENSURE_REQUIREMENTS, [id=#14]

(19) HashAggregate [codegen id : 11]
Input [3]: [cr_returning_customer_sk#1, ca_state#10, sum#13]
Keys [2]: [cr_returning_customer_sk#1, ca_state#10]
Functions [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#3))#15]
Results [3]: [cr_returning_customer_sk#1 AS ctr_customer_sk#16, ca_state#10 AS ctr_state#17, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#3))#15,17,2) AS ctr_total_return#18]

(20) Filter [codegen id : 11]
Input [3]: [ctr_customer_sk#16, ctr_state#17, ctr_total_return#18]
Condition : isnotnull(ctr_total_return#18)

(21) Scan parquet default.catalog_returns
Output [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#4), dynamicpruningexpression(cr_returned_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(cr_returning_addr_sk)]
ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>

(22) ColumnarToRow [codegen id : 6]
Input [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]

(23) Filter [codegen id : 6]
Input [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Condition : isnotnull(cr_returning_addr_sk#2)

(24) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#6]

(25) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cr_returned_date_sk#4]
Right keys [1]: [d_date_sk#6]
Join condition: None

(26) Project [codegen id : 6]
Output [3]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3]
Input [5]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4, d_date_sk#6]

(27) ReusedExchange [Reuses operator id: 14]
Output [2]: [ca_address_sk#9, ca_state#10]

(28) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cr_returning_addr_sk#2]
Right keys [1]: [ca_address_sk#9]
Join condition: None

(29) Project [codegen id : 6]
Output [3]: [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#10]
Input [5]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, ca_address_sk#9, ca_state#10]

(30) HashAggregate [codegen id : 6]
Input [3]: [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#10]
Keys [2]: [cr_returning_customer_sk#1, ca_state#10]
Functions [1]: [partial_sum(UnscaledValue(cr_return_amt_inc_tax#3))]
Aggregate Attributes [1]: [sum#19]
Results [3]: [cr_returning_customer_sk#1, ca_state#10, sum#20]

(31) Exchange
Input [3]: [cr_returning_customer_sk#1, ca_state#10, sum#20]
Arguments: hashpartitioning(cr_returning_customer_sk#1, ca_state#10, 5), ENSURE_REQUIREMENTS, [id=#21]

(32) HashAggregate [codegen id : 7]
Input [3]: [cr_returning_customer_sk#1, ca_state#10, sum#20]
Keys [2]: [cr_returning_customer_sk#1, ca_state#10]
Functions [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#3))#22]
Results [2]: [ca_state#10 AS ctr_state#17, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#3))#22,17,2) AS ctr_total_return#18]

(33) HashAggregate [codegen id : 7]
Input [2]: [ctr_state#17, ctr_total_return#18]
Keys [1]: [ctr_state#17]
Functions [1]: [partial_avg(ctr_total_return#18)]
Aggregate Attributes [2]: [sum#23, count#24]
Results [3]: [ctr_state#17, sum#25, count#26]

(34) Exchange
Input [3]: [ctr_state#17, sum#25, count#26]
Arguments: hashpartitioning(ctr_state#17, 5), ENSURE_REQUIREMENTS, [id=#27]

(35) HashAggregate [codegen id : 8]
Input [3]: [ctr_state#17, sum#25, count#26]
Keys [1]: [ctr_state#17]
Functions [1]: [avg(ctr_total_return#18)]
Aggregate Attributes [1]: [avg(ctr_total_return#18)#28]
Results [2]: [CheckOverflow((promote_precision(avg(ctr_total_return#18)#28) * 1.200000), DecimalType(24,7), true) AS (avg(ctr_total_return) * 1.2)#29, ctr_state#17 AS ctr_state#17#30]

(36) Filter [codegen id : 8]
Input [2]: [(avg(ctr_total_return) * 1.2)#29, ctr_state#17#30]
Condition : isnotnull((avg(ctr_total_return) * 1.2)#29)

(37) BroadcastExchange
Input [2]: [(avg(ctr_total_return) * 1.2)#29, ctr_state#17#30]
Arguments: HashedRelationBroadcastMode(List(input[1, string, true]),false), [id=#31]

(38) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [ctr_state#17]
Right keys [1]: [ctr_state#17#30]
Join condition: (cast(ctr_total_return#18 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#29)

(39) Project [codegen id : 11]
Output [2]: [ctr_customer_sk#16, ctr_total_return#18]
Input [5]: [ctr_customer_sk#16, ctr_state#17, ctr_total_return#18, (avg(ctr_total_return) * 1.2)#29, ctr_state#17#30]

(40) Scan parquet default.customer
Output [6]: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_name:string,c_last_name:string>

(41) ColumnarToRow [codegen id : 9]
Input [6]: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37]

(42) Filter [codegen id : 9]
Input [6]: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37]
Condition : (isnotnull(c_customer_sk#32) AND isnotnull(c_current_addr_sk#34))

(43) BroadcastExchange
Input [6]: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#38]

(44) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [ctr_customer_sk#16]
Right keys [1]: [c_customer_sk#32]
Join condition: None

(45) Project [codegen id : 11]
Output [6]: [ctr_total_return#18, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37]
Input [8]: [ctr_customer_sk#16, ctr_total_return#18, c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37]

(46) Scan parquet default.customer_address
Output [12]: [ca_address_sk#9, ca_street_number#39, ca_street_name#40, ca_street_type#41, ca_suite_number#42, ca_city#43, ca_county#44, ca_state#10, ca_zip#45, ca_country#46, ca_gmt_offset#47, ca_location_type#48]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_suite_number:string,ca_city:string,ca_county:string,ca_state:string,ca_zip:string,ca_country:string,ca_gmt_offset:decimal(5,2),ca_location_type:string>

(47) ColumnarToRow [codegen id : 10]
Input [12]: [ca_address_sk#9, ca_street_number#39, ca_street_name#40, ca_street_type#41, ca_suite_number#42, ca_city#43, ca_county#44, ca_state#10, ca_zip#45, ca_country#46, ca_gmt_offset#47, ca_location_type#48]

(48) Filter [codegen id : 10]
Input [12]: [ca_address_sk#9, ca_street_number#39, ca_street_name#40, ca_street_type#41, ca_suite_number#42, ca_city#43, ca_county#44, ca_state#10, ca_zip#45, ca_country#46, ca_gmt_offset#47, ca_location_type#48]
Condition : ((isnotnull(ca_state#10) AND (ca_state#10 = GA)) AND isnotnull(ca_address_sk#9))

(49) BroadcastExchange
Input [12]: [ca_address_sk#9, ca_street_number#39, ca_street_name#40, ca_street_type#41, ca_suite_number#42, ca_city#43, ca_county#44, ca_state#10, ca_zip#45, ca_country#46, ca_gmt_offset#47, ca_location_type#48]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#49]

(50) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [c_current_addr_sk#34]
Right keys [1]: [ca_address_sk#9]
Join condition: None

(51) Project [codegen id : 11]
Output [16]: [c_customer_id#33, c_salutation#35, c_first_name#36, c_last_name#37, ca_street_number#39, ca_street_name#40, ca_street_type#41, ca_suite_number#42, ca_city#43, ca_county#44, ca_state#10, ca_zip#45, ca_country#46, ca_gmt_offset#47, ca_location_type#48, ctr_total_return#18]
Input [18]: [ctr_total_return#18, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, ca_address_sk#9, ca_street_number#39, ca_street_name#40, ca_street_type#41, ca_suite_number#42, ca_city#43, ca_county#44, ca_state#10, ca_zip#45, ca_country#46, ca_gmt_offset#47, ca_location_type#48]

(52) TakeOrderedAndProject
Input [16]: [c_customer_id#33, c_salutation#35, c_first_name#36, c_last_name#37, ca_street_number#39, ca_street_name#40, ca_street_type#41, ca_suite_number#42, ca_city#43, ca_county#44, ca_state#10, ca_zip#45, ca_country#46, ca_gmt_offset#47, ca_location_type#48, ctr_total_return#18]
Arguments: 100, [c_customer_id#33 ASC NULLS FIRST, c_salutation#35 ASC NULLS FIRST, c_first_name#36 ASC NULLS FIRST, c_last_name#37 ASC NULLS FIRST, ca_street_number#39 ASC NULLS FIRST, ca_street_name#40 ASC NULLS FIRST, ca_street_type#41 ASC NULLS FIRST, ca_suite_number#42 ASC NULLS FIRST, ca_city#43 ASC NULLS FIRST, ca_county#44 ASC NULLS FIRST, ca_state#10 ASC NULLS FIRST, ca_zip#45 ASC NULLS FIRST, ca_country#46 ASC NULLS FIRST, ca_gmt_offset#47 ASC NULLS FIRST, ca_location_type#48 ASC NULLS FIRST, ctr_total_return#18 ASC NULLS FIRST], [c_customer_id#33, c_salutation#35, c_first_name#36, c_last_name#37, ca_street_number#39, ca_street_name#40, ca_street_type#41, ca_suite_number#42, ca_city#43, ca_county#44, ca_state#10, ca_zip#45, ca_country#46, ca_gmt_offset#47, ca_location_type#48, ctr_total_return#18]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cr_returned_date_sk#4 IN dynamicpruning#5
ReusedExchange (53)


(53) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#6]

Subquery:2 Hosting operator id = 21 Hosting Expression = cr_returned_date_sk#4 IN dynamicpruning#5


