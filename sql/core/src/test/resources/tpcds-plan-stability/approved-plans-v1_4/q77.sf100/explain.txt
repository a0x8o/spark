== Physical Plan ==
TakeOrderedAndProject (85)
+- * HashAggregate (84)
   +- Exchange (83)
      +- * HashAggregate (82)
         +- * Expand (81)
            +- Union (80)
               :- * Project (30)
               :  +- * BroadcastHashJoin LeftOuter BuildRight (29)
               :     :- * HashAggregate (15)
               :     :  +- Exchange (14)
               :     :     +- * HashAggregate (13)
               :     :        +- * Project (12)
               :     :           +- * BroadcastHashJoin Inner BuildRight (11)
               :     :              :- * Project (6)
               :     :              :  +- * BroadcastHashJoin Inner BuildRight (5)
               :     :              :     :- * Filter (3)
               :     :              :     :  +- * ColumnarToRow (2)
               :     :              :     :     +- Scan parquet default.store_sales (1)
               :     :              :     +- ReusedExchange (4)
               :     :              +- BroadcastExchange (10)
               :     :                 +- * Filter (9)
               :     :                    +- * ColumnarToRow (8)
               :     :                       +- Scan parquet default.store (7)
               :     +- BroadcastExchange (28)
               :        +- * HashAggregate (27)
               :           +- Exchange (26)
               :              +- * HashAggregate (25)
               :                 +- * Project (24)
               :                    +- * BroadcastHashJoin Inner BuildRight (23)
               :                       :- * Project (21)
               :                       :  +- * BroadcastHashJoin Inner BuildRight (20)
               :                       :     :- * Filter (18)
               :                       :     :  +- * ColumnarToRow (17)
               :                       :     :     +- Scan parquet default.store_returns (16)
               :                       :     +- ReusedExchange (19)
               :                       +- ReusedExchange (22)
               :- * Project (49)
               :  +- * BroadcastNestedLoopJoin Inner BuildRight (48)
               :     :- * HashAggregate (38)
               :     :  +- Exchange (37)
               :     :     +- * HashAggregate (36)
               :     :        +- * Project (35)
               :     :           +- * BroadcastHashJoin Inner BuildRight (34)
               :     :              :- * ColumnarToRow (32)
               :     :              :  +- Scan parquet default.catalog_sales (31)
               :     :              +- ReusedExchange (33)
               :     +- BroadcastExchange (47)
               :        +- * HashAggregate (46)
               :           +- Exchange (45)
               :              +- * HashAggregate (44)
               :                 +- * Project (43)
               :                    +- * BroadcastHashJoin Inner BuildRight (42)
               :                       :- * ColumnarToRow (40)
               :                       :  +- Scan parquet default.catalog_returns (39)
               :                       +- ReusedExchange (41)
               +- * Project (79)
                  +- * BroadcastHashJoin LeftOuter BuildRight (78)
                     :- * HashAggregate (64)
                     :  +- Exchange (63)
                     :     +- * HashAggregate (62)
                     :        +- * Project (61)
                     :           +- * BroadcastHashJoin Inner BuildRight (60)
                     :              :- * Project (55)
                     :              :  +- * BroadcastHashJoin Inner BuildRight (54)
                     :              :     :- * Filter (52)
                     :              :     :  +- * ColumnarToRow (51)
                     :              :     :     +- Scan parquet default.web_sales (50)
                     :              :     +- ReusedExchange (53)
                     :              +- BroadcastExchange (59)
                     :                 +- * Filter (58)
                     :                    +- * ColumnarToRow (57)
                     :                       +- Scan parquet default.web_page (56)
                     +- BroadcastExchange (77)
                        +- * HashAggregate (76)
                           +- Exchange (75)
                              +- * HashAggregate (74)
                                 +- * Project (73)
                                    +- * BroadcastHashJoin Inner BuildRight (72)
                                       :- * Project (70)
                                       :  +- * BroadcastHashJoin Inner BuildRight (69)
                                       :     :- * Filter (67)
                                       :     :  +- * ColumnarToRow (66)
                                       :     :     +- Scan parquet default.web_returns (65)
                                       :     +- ReusedExchange (68)
                                       +- ReusedExchange (71)


(1) Scan parquet default.store_sales
Output [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]

(3) Filter [codegen id : 3]
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_store_sk#1)

(4) ReusedExchange [Reuses operator id: 90]
Output [1]: [d_date_sk#6]

(5) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#4]
Right keys [1]: [d_date_sk#6]
Join condition: None

(6) Project [codegen id : 3]
Output [3]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3]
Input [5]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4, d_date_sk#6]

(7) Scan parquet default.store
Output [1]: [s_store_sk#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int>

(8) ColumnarToRow [codegen id : 2]
Input [1]: [s_store_sk#7]

(9) Filter [codegen id : 2]
Input [1]: [s_store_sk#7]
Condition : isnotnull(s_store_sk#7)

(10) BroadcastExchange
Input [1]: [s_store_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#8]

(11) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_store_sk#1]
Right keys [1]: [s_store_sk#7]
Join condition: None

(12) Project [codegen id : 3]
Output [3]: [ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]

(13) HashAggregate [codegen id : 3]
Input [3]: [ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]
Keys [1]: [s_store_sk#7]
Functions [2]: [partial_sum(UnscaledValue(ss_ext_sales_price#2)), partial_sum(UnscaledValue(ss_net_profit#3))]
Aggregate Attributes [2]: [sum#9, sum#10]
Results [3]: [s_store_sk#7, sum#11, sum#12]

(14) Exchange
Input [3]: [s_store_sk#7, sum#11, sum#12]
Arguments: hashpartitioning(s_store_sk#7, 5), ENSURE_REQUIREMENTS, [id=#13]

(15) HashAggregate [codegen id : 8]
Input [3]: [s_store_sk#7, sum#11, sum#12]
Keys [1]: [s_store_sk#7]
Functions [2]: [sum(UnscaledValue(ss_ext_sales_price#2)), sum(UnscaledValue(ss_net_profit#3))]
Aggregate Attributes [2]: [sum(UnscaledValue(ss_ext_sales_price#2))#14, sum(UnscaledValue(ss_net_profit#3))#15]
Results [3]: [s_store_sk#7, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#2))#14,17,2) AS sales#16, MakeDecimal(sum(UnscaledValue(ss_net_profit#3))#15,17,2) AS profit#17]

(16) Scan parquet default.store_returns
Output [4]: [sr_store_sk#18, sr_return_amt#19, sr_net_loss#20, sr_returned_date_sk#21]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#21), dynamicpruningexpression(sr_returned_date_sk#21 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(sr_store_sk)]
ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>

(17) ColumnarToRow [codegen id : 6]
Input [4]: [sr_store_sk#18, sr_return_amt#19, sr_net_loss#20, sr_returned_date_sk#21]

(18) Filter [codegen id : 6]
Input [4]: [sr_store_sk#18, sr_return_amt#19, sr_net_loss#20, sr_returned_date_sk#21]
Condition : isnotnull(sr_store_sk#18)

(19) ReusedExchange [Reuses operator id: 90]
Output [1]: [d_date_sk#22]

(20) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [sr_returned_date_sk#21]
Right keys [1]: [d_date_sk#22]
Join condition: None

(21) Project [codegen id : 6]
Output [3]: [sr_store_sk#18, sr_return_amt#19, sr_net_loss#20]
Input [5]: [sr_store_sk#18, sr_return_amt#19, sr_net_loss#20, sr_returned_date_sk#21, d_date_sk#22]

(22) ReusedExchange [Reuses operator id: 10]
Output [1]: [s_store_sk#23]

(23) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [sr_store_sk#18]
Right keys [1]: [s_store_sk#23]
Join condition: None

(24) Project [codegen id : 6]
Output [3]: [sr_return_amt#19, sr_net_loss#20, s_store_sk#23]
Input [4]: [sr_store_sk#18, sr_return_amt#19, sr_net_loss#20, s_store_sk#23]

(25) HashAggregate [codegen id : 6]
Input [3]: [sr_return_amt#19, sr_net_loss#20, s_store_sk#23]
Keys [1]: [s_store_sk#23]
Functions [2]: [partial_sum(UnscaledValue(sr_return_amt#19)), partial_sum(UnscaledValue(sr_net_loss#20))]
Aggregate Attributes [2]: [sum#24, sum#25]
Results [3]: [s_store_sk#23, sum#26, sum#27]

(26) Exchange
Input [3]: [s_store_sk#23, sum#26, sum#27]
Arguments: hashpartitioning(s_store_sk#23, 5), ENSURE_REQUIREMENTS, [id=#28]

(27) HashAggregate [codegen id : 7]
Input [3]: [s_store_sk#23, sum#26, sum#27]
Keys [1]: [s_store_sk#23]
Functions [2]: [sum(UnscaledValue(sr_return_amt#19)), sum(UnscaledValue(sr_net_loss#20))]
Aggregate Attributes [2]: [sum(UnscaledValue(sr_return_amt#19))#29, sum(UnscaledValue(sr_net_loss#20))#30]
Results [3]: [s_store_sk#23, MakeDecimal(sum(UnscaledValue(sr_return_amt#19))#29,17,2) AS returns#31, MakeDecimal(sum(UnscaledValue(sr_net_loss#20))#30,17,2) AS profit_loss#32]

(28) BroadcastExchange
Input [3]: [s_store_sk#23, returns#31, profit_loss#32]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#33]

(29) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [s_store_sk#7]
Right keys [1]: [s_store_sk#23]
Join condition: None

(30) Project [codegen id : 8]
Output [5]: [sales#16, coalesce(returns#31, 0.00) AS returns#34, CheckOverflow((promote_precision(cast(profit#17 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#32, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#35, store channel AS channel#36, s_store_sk#7 AS id#37]
Input [6]: [s_store_sk#7, sales#16, profit#17, s_store_sk#23, returns#31, profit_loss#32]

(31) Scan parquet default.catalog_sales
Output [4]: [cs_call_center_sk#38, cs_ext_sales_price#39, cs_net_profit#40, cs_sold_date_sk#41]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#41), dynamicpruningexpression(cs_sold_date_sk#41 IN dynamicpruning#5)]
ReadSchema: struct<cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>

(32) ColumnarToRow [codegen id : 10]
Input [4]: [cs_call_center_sk#38, cs_ext_sales_price#39, cs_net_profit#40, cs_sold_date_sk#41]

(33) ReusedExchange [Reuses operator id: 90]
Output [1]: [d_date_sk#42]

(34) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_sold_date_sk#41]
Right keys [1]: [d_date_sk#42]
Join condition: None

(35) Project [codegen id : 10]
Output [3]: [cs_call_center_sk#38, cs_ext_sales_price#39, cs_net_profit#40]
Input [5]: [cs_call_center_sk#38, cs_ext_sales_price#39, cs_net_profit#40, cs_sold_date_sk#41, d_date_sk#42]

(36) HashAggregate [codegen id : 10]
Input [3]: [cs_call_center_sk#38, cs_ext_sales_price#39, cs_net_profit#40]
Keys [1]: [cs_call_center_sk#38]
Functions [2]: [partial_sum(UnscaledValue(cs_ext_sales_price#39)), partial_sum(UnscaledValue(cs_net_profit#40))]
Aggregate Attributes [2]: [sum#43, sum#44]
Results [3]: [cs_call_center_sk#38, sum#45, sum#46]

(37) Exchange
Input [3]: [cs_call_center_sk#38, sum#45, sum#46]
Arguments: hashpartitioning(cs_call_center_sk#38, 5), ENSURE_REQUIREMENTS, [id=#47]

(38) HashAggregate [codegen id : 14]
Input [3]: [cs_call_center_sk#38, sum#45, sum#46]
Keys [1]: [cs_call_center_sk#38]
Functions [2]: [sum(UnscaledValue(cs_ext_sales_price#39)), sum(UnscaledValue(cs_net_profit#40))]
Aggregate Attributes [2]: [sum(UnscaledValue(cs_ext_sales_price#39))#48, sum(UnscaledValue(cs_net_profit#40))#49]
Results [3]: [cs_call_center_sk#38, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#39))#48,17,2) AS sales#50, MakeDecimal(sum(UnscaledValue(cs_net_profit#40))#49,17,2) AS profit#51]

(39) Scan parquet default.catalog_returns
Output [3]: [cr_return_amount#52, cr_net_loss#53, cr_returned_date_sk#54]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#54), dynamicpruningexpression(cr_returned_date_sk#54 IN dynamicpruning#5)]
ReadSchema: struct<cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>

(40) ColumnarToRow [codegen id : 12]
Input [3]: [cr_return_amount#52, cr_net_loss#53, cr_returned_date_sk#54]

(41) ReusedExchange [Reuses operator id: 90]
Output [1]: [d_date_sk#55]

(42) BroadcastHashJoin [codegen id : 12]
Left keys [1]: [cr_returned_date_sk#54]
Right keys [1]: [d_date_sk#55]
Join condition: None

(43) Project [codegen id : 12]
Output [2]: [cr_return_amount#52, cr_net_loss#53]
Input [4]: [cr_return_amount#52, cr_net_loss#53, cr_returned_date_sk#54, d_date_sk#55]

(44) HashAggregate [codegen id : 12]
Input [2]: [cr_return_amount#52, cr_net_loss#53]
Keys: []
Functions [2]: [partial_sum(UnscaledValue(cr_return_amount#52)), partial_sum(UnscaledValue(cr_net_loss#53))]
Aggregate Attributes [2]: [sum#56, sum#57]
Results [2]: [sum#58, sum#59]

(45) Exchange
Input [2]: [sum#58, sum#59]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#60]

(46) HashAggregate [codegen id : 13]
Input [2]: [sum#58, sum#59]
Keys: []
Functions [2]: [sum(UnscaledValue(cr_return_amount#52)), sum(UnscaledValue(cr_net_loss#53))]
Aggregate Attributes [2]: [sum(UnscaledValue(cr_return_amount#52))#61, sum(UnscaledValue(cr_net_loss#53))#62]
Results [2]: [MakeDecimal(sum(UnscaledValue(cr_return_amount#52))#61,17,2) AS returns#63, MakeDecimal(sum(UnscaledValue(cr_net_loss#53))#62,17,2) AS profit_loss#64]

(47) BroadcastExchange
Input [2]: [returns#63, profit_loss#64]
Arguments: IdentityBroadcastMode, [id=#65]

(48) BroadcastNestedLoopJoin [codegen id : 14]
Join condition: None

(49) Project [codegen id : 14]
Output [5]: [sales#50, returns#63, CheckOverflow((promote_precision(cast(profit#51 as decimal(18,2))) - promote_precision(cast(profit_loss#64 as decimal(18,2)))), DecimalType(18,2), true) AS profit#66, catalog channel AS channel#67, cs_call_center_sk#38 AS id#68]
Input [5]: [cs_call_center_sk#38, sales#50, profit#51, returns#63, profit_loss#64]

(50) Scan parquet default.web_sales
Output [4]: [ws_web_page_sk#69, ws_ext_sales_price#70, ws_net_profit#71, ws_sold_date_sk#72]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#72), dynamicpruningexpression(ws_sold_date_sk#72 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ws_web_page_sk)]
ReadSchema: struct<ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>

(51) ColumnarToRow [codegen id : 17]
Input [4]: [ws_web_page_sk#69, ws_ext_sales_price#70, ws_net_profit#71, ws_sold_date_sk#72]

(52) Filter [codegen id : 17]
Input [4]: [ws_web_page_sk#69, ws_ext_sales_price#70, ws_net_profit#71, ws_sold_date_sk#72]
Condition : isnotnull(ws_web_page_sk#69)

(53) ReusedExchange [Reuses operator id: 90]
Output [1]: [d_date_sk#73]

(54) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_sold_date_sk#72]
Right keys [1]: [d_date_sk#73]
Join condition: None

(55) Project [codegen id : 17]
Output [3]: [ws_web_page_sk#69, ws_ext_sales_price#70, ws_net_profit#71]
Input [5]: [ws_web_page_sk#69, ws_ext_sales_price#70, ws_net_profit#71, ws_sold_date_sk#72, d_date_sk#73]

(56) Scan parquet default.web_page
Output [1]: [wp_web_page_sk#74]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_page]
PushedFilters: [IsNotNull(wp_web_page_sk)]
ReadSchema: struct<wp_web_page_sk:int>

(57) ColumnarToRow [codegen id : 16]
Input [1]: [wp_web_page_sk#74]

(58) Filter [codegen id : 16]
Input [1]: [wp_web_page_sk#74]
Condition : isnotnull(wp_web_page_sk#74)

(59) BroadcastExchange
Input [1]: [wp_web_page_sk#74]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#75]

(60) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_web_page_sk#69]
Right keys [1]: [wp_web_page_sk#74]
Join condition: None

(61) Project [codegen id : 17]
Output [3]: [ws_ext_sales_price#70, ws_net_profit#71, wp_web_page_sk#74]
Input [4]: [ws_web_page_sk#69, ws_ext_sales_price#70, ws_net_profit#71, wp_web_page_sk#74]

(62) HashAggregate [codegen id : 17]
Input [3]: [ws_ext_sales_price#70, ws_net_profit#71, wp_web_page_sk#74]
Keys [1]: [wp_web_page_sk#74]
Functions [2]: [partial_sum(UnscaledValue(ws_ext_sales_price#70)), partial_sum(UnscaledValue(ws_net_profit#71))]
Aggregate Attributes [2]: [sum#76, sum#77]
Results [3]: [wp_web_page_sk#74, sum#78, sum#79]

(63) Exchange
Input [3]: [wp_web_page_sk#74, sum#78, sum#79]
Arguments: hashpartitioning(wp_web_page_sk#74, 5), ENSURE_REQUIREMENTS, [id=#80]

(64) HashAggregate [codegen id : 22]
Input [3]: [wp_web_page_sk#74, sum#78, sum#79]
Keys [1]: [wp_web_page_sk#74]
Functions [2]: [sum(UnscaledValue(ws_ext_sales_price#70)), sum(UnscaledValue(ws_net_profit#71))]
Aggregate Attributes [2]: [sum(UnscaledValue(ws_ext_sales_price#70))#81, sum(UnscaledValue(ws_net_profit#71))#82]
Results [3]: [wp_web_page_sk#74, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#70))#81,17,2) AS sales#83, MakeDecimal(sum(UnscaledValue(ws_net_profit#71))#82,17,2) AS profit#84]

(65) Scan parquet default.web_returns
Output [4]: [wr_web_page_sk#85, wr_return_amt#86, wr_net_loss#87, wr_returned_date_sk#88]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#88), dynamicpruningexpression(wr_returned_date_sk#88 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(wr_web_page_sk)]
ReadSchema: struct<wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>

(66) ColumnarToRow [codegen id : 20]
Input [4]: [wr_web_page_sk#85, wr_return_amt#86, wr_net_loss#87, wr_returned_date_sk#88]

(67) Filter [codegen id : 20]
Input [4]: [wr_web_page_sk#85, wr_return_amt#86, wr_net_loss#87, wr_returned_date_sk#88]
Condition : isnotnull(wr_web_page_sk#85)

(68) ReusedExchange [Reuses operator id: 90]
Output [1]: [d_date_sk#89]

(69) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [wr_returned_date_sk#88]
Right keys [1]: [d_date_sk#89]
Join condition: None

(70) Project [codegen id : 20]
Output [3]: [wr_web_page_sk#85, wr_return_amt#86, wr_net_loss#87]
Input [5]: [wr_web_page_sk#85, wr_return_amt#86, wr_net_loss#87, wr_returned_date_sk#88, d_date_sk#89]

(71) ReusedExchange [Reuses operator id: 59]
Output [1]: [wp_web_page_sk#90]

(72) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [wr_web_page_sk#85]
Right keys [1]: [wp_web_page_sk#90]
Join condition: None

(73) Project [codegen id : 20]
Output [3]: [wr_return_amt#86, wr_net_loss#87, wp_web_page_sk#90]
Input [4]: [wr_web_page_sk#85, wr_return_amt#86, wr_net_loss#87, wp_web_page_sk#90]

(74) HashAggregate [codegen id : 20]
Input [3]: [wr_return_amt#86, wr_net_loss#87, wp_web_page_sk#90]
Keys [1]: [wp_web_page_sk#90]
Functions [2]: [partial_sum(UnscaledValue(wr_return_amt#86)), partial_sum(UnscaledValue(wr_net_loss#87))]
Aggregate Attributes [2]: [sum#91, sum#92]
Results [3]: [wp_web_page_sk#90, sum#93, sum#94]

(75) Exchange
Input [3]: [wp_web_page_sk#90, sum#93, sum#94]
Arguments: hashpartitioning(wp_web_page_sk#90, 5), ENSURE_REQUIREMENTS, [id=#95]

(76) HashAggregate [codegen id : 21]
Input [3]: [wp_web_page_sk#90, sum#93, sum#94]
Keys [1]: [wp_web_page_sk#90]
Functions [2]: [sum(UnscaledValue(wr_return_amt#86)), sum(UnscaledValue(wr_net_loss#87))]
Aggregate Attributes [2]: [sum(UnscaledValue(wr_return_amt#86))#96, sum(UnscaledValue(wr_net_loss#87))#97]
Results [3]: [wp_web_page_sk#90, MakeDecimal(sum(UnscaledValue(wr_return_amt#86))#96,17,2) AS returns#98, MakeDecimal(sum(UnscaledValue(wr_net_loss#87))#97,17,2) AS profit_loss#99]

(77) BroadcastExchange
Input [3]: [wp_web_page_sk#90, returns#98, profit_loss#99]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#100]

(78) BroadcastHashJoin [codegen id : 22]
Left keys [1]: [wp_web_page_sk#74]
Right keys [1]: [wp_web_page_sk#90]
Join condition: None

(79) Project [codegen id : 22]
Output [5]: [sales#83, coalesce(returns#98, 0.00) AS returns#101, CheckOverflow((promote_precision(cast(profit#84 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#99, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#102, web channel AS channel#103, wp_web_page_sk#74 AS id#104]
Input [6]: [wp_web_page_sk#74, sales#83, profit#84, wp_web_page_sk#90, returns#98, profit_loss#99]

(80) Union

(81) Expand [codegen id : 23]
Input [5]: [sales#16, returns#34, profit#35, channel#36, id#37]
Arguments: [[sales#16, returns#34, profit#35, channel#36, id#37, 0], [sales#16, returns#34, profit#35, channel#36, null, 1], [sales#16, returns#34, profit#35, null, null, 3]], [sales#16, returns#34, profit#35, channel#105, id#106, spark_grouping_id#107]

(82) HashAggregate [codegen id : 23]
Input [6]: [sales#16, returns#34, profit#35, channel#105, id#106, spark_grouping_id#107]
Keys [3]: [channel#105, id#106, spark_grouping_id#107]
Functions [3]: [partial_sum(sales#16), partial_sum(returns#34), partial_sum(profit#35)]
Aggregate Attributes [6]: [sum#108, isEmpty#109, sum#110, isEmpty#111, sum#112, isEmpty#113]
Results [9]: [channel#105, id#106, spark_grouping_id#107, sum#114, isEmpty#115, sum#116, isEmpty#117, sum#118, isEmpty#119]

(83) Exchange
Input [9]: [channel#105, id#106, spark_grouping_id#107, sum#114, isEmpty#115, sum#116, isEmpty#117, sum#118, isEmpty#119]
Arguments: hashpartitioning(channel#105, id#106, spark_grouping_id#107, 5), ENSURE_REQUIREMENTS, [id=#120]

(84) HashAggregate [codegen id : 24]
Input [9]: [channel#105, id#106, spark_grouping_id#107, sum#114, isEmpty#115, sum#116, isEmpty#117, sum#118, isEmpty#119]
Keys [3]: [channel#105, id#106, spark_grouping_id#107]
Functions [3]: [sum(sales#16), sum(returns#34), sum(profit#35)]
Aggregate Attributes [3]: [sum(sales#16)#121, sum(returns#34)#122, sum(profit#35)#123]
Results [5]: [channel#105, id#106, sum(sales#16)#121 AS sales#124, sum(returns#34)#122 AS returns#125, sum(profit#35)#123 AS profit#126]

(85) TakeOrderedAndProject
Input [5]: [channel#105, id#106, sales#124, returns#125, profit#126]
Arguments: 100, [channel#105 ASC NULLS FIRST, id#106 ASC NULLS FIRST], [channel#105, id#106, sales#124, returns#125, profit#126]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (90)
+- * Project (89)
   +- * Filter (88)
      +- * ColumnarToRow (87)
         +- Scan parquet default.date_dim (86)


(86) Scan parquet default.date_dim
Output [2]: [d_date_sk#6, d_date#127]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(87) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#6, d_date#127]

(88) Filter [codegen id : 1]
Input [2]: [d_date_sk#6, d_date#127]
Condition : (((isnotnull(d_date#127) AND (d_date#127 >= 2000-08-03)) AND (d_date#127 <= 2000-09-02)) AND isnotnull(d_date_sk#6))

(89) Project [codegen id : 1]
Output [1]: [d_date_sk#6]
Input [2]: [d_date_sk#6, d_date#127]

(90) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#128]

Subquery:2 Hosting operator id = 16 Hosting Expression = sr_returned_date_sk#21 IN dynamicpruning#5

Subquery:3 Hosting operator id = 31 Hosting Expression = cs_sold_date_sk#41 IN dynamicpruning#5

Subquery:4 Hosting operator id = 39 Hosting Expression = cr_returned_date_sk#54 IN dynamicpruning#5

Subquery:5 Hosting operator id = 50 Hosting Expression = ws_sold_date_sk#72 IN dynamicpruning#5

Subquery:6 Hosting operator id = 65 Hosting Expression = wr_returned_date_sk#88 IN dynamicpruning#5


