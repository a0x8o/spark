== Physical Plan ==
TakeOrderedAndProject (27)
+- * Filter (26)
   +- * HashAggregate (25)
      +- Exchange (24)
         +- * HashAggregate (23)
            +- * Project (22)
               +- * BroadcastHashJoin Inner BuildRight (21)
                  :- * Project (16)
                  :  +- * BroadcastHashJoin Inner BuildRight (15)
                  :     :- * Project (10)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (9)
                  :     :     :- * Filter (3)
                  :     :     :  +- * ColumnarToRow (2)
                  :     :     :     +- Scan parquet default.inventory (1)
                  :     :     +- BroadcastExchange (8)
                  :     :        +- * Project (7)
                  :     :           +- * Filter (6)
                  :     :              +- * ColumnarToRow (5)
                  :     :                 +- Scan parquet default.item (4)
                  :     +- BroadcastExchange (14)
                  :        +- * Filter (13)
                  :           +- * ColumnarToRow (12)
                  :              +- Scan parquet default.date_dim (11)
                  +- BroadcastExchange (20)
                     +- * Filter (19)
                        +- * ColumnarToRow (18)
                           +- Scan parquet default.warehouse (17)


(1) Scan parquet default.inventory
Output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(inv_date_sk#4), dynamicpruningexpression(inv_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(inv_warehouse_sk), IsNotNull(inv_item_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 4]
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]

(3) Filter [codegen id : 4]
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Condition : (isnotnull(inv_warehouse_sk#2) AND isnotnull(inv_item_sk#1))

(4) Scan parquet default.item
Output [3]: [i_item_sk#6, i_item_id#7, i_current_price#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_price,1.49), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [i_item_sk#6, i_item_id#7, i_current_price#8]

(6) Filter [codegen id : 1]
Input [3]: [i_item_sk#6, i_item_id#7, i_current_price#8]
Condition : (((isnotnull(i_current_price#8) AND (i_current_price#8 >= 0.99)) AND (i_current_price#8 <= 1.49)) AND isnotnull(i_item_sk#6))

(7) Project [codegen id : 1]
Output [2]: [i_item_sk#6, i_item_id#7]
Input [3]: [i_item_sk#6, i_item_id#7, i_current_price#8]

(8) BroadcastExchange
Input [2]: [i_item_sk#6, i_item_id#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#9]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#1]
Right keys [1]: [i_item_sk#6]
Join condition: None

(10) Project [codegen id : 4]
Output [4]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, i_item_id#7]
Input [6]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, i_item_sk#6, i_item_id#7]

(11) Scan parquet default.date_dim
Output [2]: [d_date_sk#10, d_date#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-02-10), LessThanOrEqual(d_date,2000-04-10), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(12) ColumnarToRow [codegen id : 2]
Input [2]: [d_date_sk#10, d_date#11]

(13) Filter [codegen id : 2]
Input [2]: [d_date_sk#10, d_date#11]
Condition : (((isnotnull(d_date#11) AND (d_date#11 >= 2000-02-10)) AND (d_date#11 <= 2000-04-10)) AND isnotnull(d_date_sk#10))

(14) BroadcastExchange
Input [2]: [d_date_sk#10, d_date#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#12]

(15) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#4]
Right keys [1]: [d_date_sk#10]
Join condition: None

(16) Project [codegen id : 4]
Output [4]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_item_id#7, d_date#11]
Input [6]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, i_item_id#7, d_date_sk#10, d_date#11]

(17) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#13, w_warehouse_name#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(18) ColumnarToRow [codegen id : 3]
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]

(19) Filter [codegen id : 3]
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]
Condition : isnotnull(w_warehouse_sk#13)

(20) BroadcastExchange
Input [2]: [w_warehouse_sk#13, w_warehouse_name#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#15]

(21) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#2]
Right keys [1]: [w_warehouse_sk#13]
Join condition: None

(22) Project [codegen id : 4]
Output [4]: [inv_quantity_on_hand#3, w_warehouse_name#14, i_item_id#7, d_date#11]
Input [6]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_item_id#7, d_date#11, w_warehouse_sk#13, w_warehouse_name#14]

(23) HashAggregate [codegen id : 4]
Input [4]: [inv_quantity_on_hand#3, w_warehouse_name#14, i_item_id#7, d_date#11]
Keys [2]: [w_warehouse_name#14, i_item_id#7]
Functions [2]: [partial_sum(CASE WHEN (d_date#11 < 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END), partial_sum(CASE WHEN (d_date#11 >= 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)]
Aggregate Attributes [2]: [sum#16, sum#17]
Results [4]: [w_warehouse_name#14, i_item_id#7, sum#18, sum#19]

(24) Exchange
Input [4]: [w_warehouse_name#14, i_item_id#7, sum#18, sum#19]
Arguments: hashpartitioning(w_warehouse_name#14, i_item_id#7, 5), ENSURE_REQUIREMENTS, [id=#20]

(25) HashAggregate [codegen id : 5]
Input [4]: [w_warehouse_name#14, i_item_id#7, sum#18, sum#19]
Keys [2]: [w_warehouse_name#14, i_item_id#7]
Functions [2]: [sum(CASE WHEN (d_date#11 < 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END), sum(CASE WHEN (d_date#11 >= 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)]
Aggregate Attributes [2]: [sum(CASE WHEN (d_date#11 < 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)#21, sum(CASE WHEN (d_date#11 >= 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)#22]
Results [4]: [w_warehouse_name#14, i_item_id#7, sum(CASE WHEN (d_date#11 < 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)#21 AS inv_before#23, sum(CASE WHEN (d_date#11 >= 2000-03-11) THEN inv_quantity_on_hand#3 ELSE 0 END)#22 AS inv_after#24]

(26) Filter [codegen id : 5]
Input [4]: [w_warehouse_name#14, i_item_id#7, inv_before#23, inv_after#24]
Condition : (((((isnotnull(inv_before#23) AND isnotnull(inv_after#24)) AND (inv_before#23 > 0)) AND ((cast(inv_after#24 as double) / cast(inv_before#23 as double)) >= 0.666667)) AND (inv_before#23 > 0)) AND ((cast(inv_after#24 as double) / cast(inv_before#23 as double)) <= 1.5))

(27) TakeOrderedAndProject
Input [4]: [w_warehouse_name#14, i_item_id#7, inv_before#23, inv_after#24]
Arguments: 100, [w_warehouse_name#14 ASC NULLS FIRST, i_item_id#7 ASC NULLS FIRST], [w_warehouse_name#14, i_item_id#7, inv_before#23, inv_after#24]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = inv_date_sk#4 IN dynamicpruning#5
ReusedExchange (28)


(28) ReusedExchange [Reuses operator id: 14]
Output [2]: [d_date_sk#10, d_date#11]


