== Physical Plan ==
TakeOrderedAndProject (74)
+- * HashAggregate (73)
   +- Exchange (72)
      +- * HashAggregate (71)
         +- * Project (70)
            +- SortMergeJoin LeftOuter (69)
               :- * Sort (62)
               :  +- Exchange (61)
               :     +- * Project (60)
               :        +- * BroadcastHashJoin LeftOuter BuildRight (59)
               :           :- * Project (54)
               :           :  +- * BroadcastHashJoin Inner BuildRight (53)
               :           :     :- * Project (48)
               :           :     :  +- * BroadcastHashJoin Inner BuildRight (47)
               :           :     :     :- * Project (42)
               :           :     :     :  +- * BroadcastHashJoin Inner BuildRight (41)
               :           :     :     :     :- * Project (35)
               :           :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (34)
               :           :     :     :     :     :- * Project (28)
               :           :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (27)
               :           :     :     :     :     :     :- * Project (21)
               :           :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (20)
               :           :     :     :     :     :     :     :- * Project (15)
               :           :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (14)
               :           :     :     :     :     :     :     :     :- * Project (9)
               :           :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (8)
               :           :     :     :     :     :     :     :     :     :- * Filter (3)
               :           :     :     :     :     :     :     :     :     :  +- * ColumnarToRow (2)
               :           :     :     :     :     :     :     :     :     :     +- Scan parquet default.catalog_sales (1)
               :           :     :     :     :     :     :     :     :     +- BroadcastExchange (7)
               :           :     :     :     :     :     :     :     :        +- * Filter (6)
               :           :     :     :     :     :     :     :     :           +- * ColumnarToRow (5)
               :           :     :     :     :     :     :     :     :              +- Scan parquet default.inventory (4)
               :           :     :     :     :     :     :     :     +- BroadcastExchange (13)
               :           :     :     :     :     :     :     :        +- * Filter (12)
               :           :     :     :     :     :     :     :           +- * ColumnarToRow (11)
               :           :     :     :     :     :     :     :              +- Scan parquet default.warehouse (10)
               :           :     :     :     :     :     :     +- BroadcastExchange (19)
               :           :     :     :     :     :     :        +- * Filter (18)
               :           :     :     :     :     :     :           +- * ColumnarToRow (17)
               :           :     :     :     :     :     :              +- Scan parquet default.item (16)
               :           :     :     :     :     :     +- BroadcastExchange (26)
               :           :     :     :     :     :        +- * Project (25)
               :           :     :     :     :     :           +- * Filter (24)
               :           :     :     :     :     :              +- * ColumnarToRow (23)
               :           :     :     :     :     :                 +- Scan parquet default.customer_demographics (22)
               :           :     :     :     :     +- BroadcastExchange (33)
               :           :     :     :     :        +- * Project (32)
               :           :     :     :     :           +- * Filter (31)
               :           :     :     :     :              +- * ColumnarToRow (30)
               :           :     :     :     :                 +- Scan parquet default.household_demographics (29)
               :           :     :     :     +- BroadcastExchange (40)
               :           :     :     :        +- * Project (39)
               :           :     :     :           +- * Filter (38)
               :           :     :     :              +- * ColumnarToRow (37)
               :           :     :     :                 +- Scan parquet default.date_dim (36)
               :           :     :     +- BroadcastExchange (46)
               :           :     :        +- * Filter (45)
               :           :     :           +- * ColumnarToRow (44)
               :           :     :              +- Scan parquet default.date_dim (43)
               :           :     +- BroadcastExchange (52)
               :           :        +- * Filter (51)
               :           :           +- * ColumnarToRow (50)
               :           :              +- Scan parquet default.date_dim (49)
               :           +- BroadcastExchange (58)
               :              +- * Filter (57)
               :                 +- * ColumnarToRow (56)
               :                    +- Scan parquet default.promotion (55)
               +- * Sort (68)
                  +- Exchange (67)
                     +- * Project (66)
                        +- * Filter (65)
                           +- * ColumnarToRow (64)
                              +- Scan parquet default.catalog_returns (63)


(1) Scan parquet default.catalog_sales
Output [8]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_quantity#7, cs_sold_date_sk#8]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#8), dynamicpruningexpression(cs_sold_date_sk#8 IN dynamicpruning#9)]
PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hdemo_sk), IsNotNull(cs_ship_date_sk)]
ReadSchema: struct<cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int>

(2) ColumnarToRow [codegen id : 10]
Input [8]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_quantity#7, cs_sold_date_sk#8]

(3) Filter [codegen id : 10]
Input [8]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_quantity#7, cs_sold_date_sk#8]
Condition : ((((isnotnull(cs_quantity#7) AND isnotnull(cs_item_sk#4)) AND isnotnull(cs_bill_cdemo_sk#2)) AND isnotnull(cs_bill_hdemo_sk#3)) AND isnotnull(cs_ship_date_sk#1))

(4) Scan parquet default.inventory
Output [4]: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(inv_date_sk#13)]
PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(5) ColumnarToRow [codegen id : 1]
Input [4]: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]

(6) Filter [codegen id : 1]
Input [4]: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]
Condition : ((isnotnull(inv_quantity_on_hand#12) AND isnotnull(inv_item_sk#10)) AND isnotnull(inv_warehouse_sk#11))

(7) BroadcastExchange
Input [4]: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#14]

(8) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [inv_item_sk#10]
Join condition: (inv_quantity_on_hand#12 < cs_quantity#7)

(9) Project [codegen id : 10]
Output [9]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_warehouse_sk#11, inv_date_sk#13]
Input [12]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_quantity#7, cs_sold_date_sk#8, inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]

(10) Scan parquet default.warehouse
Output [2]: [w_warehouse_sk#15, w_warehouse_name#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(11) ColumnarToRow [codegen id : 2]
Input [2]: [w_warehouse_sk#15, w_warehouse_name#16]

(12) Filter [codegen id : 2]
Input [2]: [w_warehouse_sk#15, w_warehouse_name#16]
Condition : isnotnull(w_warehouse_sk#15)

(13) BroadcastExchange
Input [2]: [w_warehouse_sk#15, w_warehouse_name#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#17]

(14) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [inv_warehouse_sk#11]
Right keys [1]: [w_warehouse_sk#15]
Join condition: None

(15) Project [codegen id : 10]
Output [9]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#16]
Input [11]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_warehouse_sk#11, inv_date_sk#13, w_warehouse_sk#15, w_warehouse_name#16]

(16) Scan parquet default.item
Output [2]: [i_item_sk#18, i_item_desc#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_desc:string>

(17) ColumnarToRow [codegen id : 3]
Input [2]: [i_item_sk#18, i_item_desc#19]

(18) Filter [codegen id : 3]
Input [2]: [i_item_sk#18, i_item_desc#19]
Condition : isnotnull(i_item_sk#18)

(19) BroadcastExchange
Input [2]: [i_item_sk#18, i_item_desc#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#20]

(20) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_item_sk#4]
Right keys [1]: [i_item_sk#18]
Join condition: None

(21) Project [codegen id : 10]
Output [10]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#16, i_item_desc#19]
Input [11]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#16, i_item_sk#18, i_item_desc#19]

(22) Scan parquet default.customer_demographics
Output [2]: [cd_demo_sk#21, cd_marital_status#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_marital_status), EqualTo(cd_marital_status,M), IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>

(23) ColumnarToRow [codegen id : 4]
Input [2]: [cd_demo_sk#21, cd_marital_status#22]

(24) Filter [codegen id : 4]
Input [2]: [cd_demo_sk#21, cd_marital_status#22]
Condition : ((isnotnull(cd_marital_status#22) AND (cd_marital_status#22 = M)) AND isnotnull(cd_demo_sk#21))

(25) Project [codegen id : 4]
Output [1]: [cd_demo_sk#21]
Input [2]: [cd_demo_sk#21, cd_marital_status#22]

(26) BroadcastExchange
Input [1]: [cd_demo_sk#21]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#23]

(27) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_bill_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#21]
Join condition: None

(28) Project [codegen id : 10]
Output [9]: [cs_ship_date_sk#1, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#16, i_item_desc#19]
Input [11]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#16, i_item_desc#19, cd_demo_sk#21]

(29) Scan parquet default.household_demographics
Output [2]: [hd_demo_sk#24, hd_buy_potential#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_buy_potential), EqualTo(hd_buy_potential,1001-5000), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>

(30) ColumnarToRow [codegen id : 5]
Input [2]: [hd_demo_sk#24, hd_buy_potential#25]

(31) Filter [codegen id : 5]
Input [2]: [hd_demo_sk#24, hd_buy_potential#25]
Condition : ((isnotnull(hd_buy_potential#25) AND (hd_buy_potential#25 = 1001-5000)) AND isnotnull(hd_demo_sk#24))

(32) Project [codegen id : 5]
Output [1]: [hd_demo_sk#24]
Input [2]: [hd_demo_sk#24, hd_buy_potential#25]

(33) BroadcastExchange
Input [1]: [hd_demo_sk#24]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#26]

(34) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_bill_hdemo_sk#3]
Right keys [1]: [hd_demo_sk#24]
Join condition: None

(35) Project [codegen id : 10]
Output [8]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#16, i_item_desc#19]
Input [10]: [cs_ship_date_sk#1, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#16, i_item_desc#19, hd_demo_sk#24]

(36) Scan parquet default.date_dim
Output [4]: [d_date_sk#27, d_date#28, d_week_seq#29, d_year#30]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(d_date)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>

(37) ColumnarToRow [codegen id : 6]
Input [4]: [d_date_sk#27, d_date#28, d_week_seq#29, d_year#30]

(38) Filter [codegen id : 6]
Input [4]: [d_date_sk#27, d_date#28, d_week_seq#29, d_year#30]
Condition : ((((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#27)) AND isnotnull(d_week_seq#29)) AND isnotnull(d_date#28))

(39) Project [codegen id : 6]
Output [3]: [d_date_sk#27, d_date#28, d_week_seq#29]
Input [4]: [d_date_sk#27, d_date#28, d_week_seq#29, d_year#30]

(40) BroadcastExchange
Input [3]: [d_date_sk#27, d_date#28, d_week_seq#29]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#31]

(41) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_sold_date_sk#8]
Right keys [1]: [d_date_sk#27]
Join condition: None

(42) Project [codegen id : 10]
Output [9]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, inv_date_sk#13, w_warehouse_name#16, i_item_desc#19, d_date#28, d_week_seq#29]
Input [11]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#16, i_item_desc#19, d_date_sk#27, d_date#28, d_week_seq#29]

(43) Scan parquet default.date_dim
Output [2]: [d_date_sk#32, d_week_seq#33]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(44) ColumnarToRow [codegen id : 7]
Input [2]: [d_date_sk#32, d_week_seq#33]

(45) Filter [codegen id : 7]
Input [2]: [d_date_sk#32, d_week_seq#33]
Condition : (isnotnull(d_week_seq#33) AND isnotnull(d_date_sk#32))

(46) BroadcastExchange
Input [2]: [d_date_sk#32, d_week_seq#33]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [id=#34]

(47) BroadcastHashJoin [codegen id : 10]
Left keys [2]: [d_week_seq#29, inv_date_sk#13]
Right keys [2]: [d_week_seq#33, d_date_sk#32]
Join condition: None

(48) Project [codegen id : 10]
Output [8]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, w_warehouse_name#16, i_item_desc#19, d_date#28, d_week_seq#29]
Input [11]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, inv_date_sk#13, w_warehouse_name#16, i_item_desc#19, d_date#28, d_week_seq#29, d_date_sk#32, d_week_seq#33]

(49) Scan parquet default.date_dim
Output [2]: [d_date_sk#35, d_date#36]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(50) ColumnarToRow [codegen id : 8]
Input [2]: [d_date_sk#35, d_date#36]

(51) Filter [codegen id : 8]
Input [2]: [d_date_sk#35, d_date#36]
Condition : (isnotnull(d_date#36) AND isnotnull(d_date_sk#35))

(52) BroadcastExchange
Input [2]: [d_date_sk#35, d_date#36]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#37]

(53) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_ship_date_sk#1]
Right keys [1]: [d_date_sk#35]
Join condition: (d_date#36 > d_date#28 + 5 days)

(54) Project [codegen id : 10]
Output [6]: [cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, w_warehouse_name#16, i_item_desc#19, d_week_seq#29]
Input [10]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, w_warehouse_name#16, i_item_desc#19, d_date#28, d_week_seq#29, d_date_sk#35, d_date#36]

(55) Scan parquet default.promotion
Output [1]: [p_promo_sk#38]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int>

(56) ColumnarToRow [codegen id : 9]
Input [1]: [p_promo_sk#38]

(57) Filter [codegen id : 9]
Input [1]: [p_promo_sk#38]
Condition : isnotnull(p_promo_sk#38)

(58) BroadcastExchange
Input [1]: [p_promo_sk#38]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#39]

(59) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cs_promo_sk#5]
Right keys [1]: [p_promo_sk#38]
Join condition: None

(60) Project [codegen id : 10]
Output [5]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#16, i_item_desc#19, d_week_seq#29]
Input [7]: [cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, w_warehouse_name#16, i_item_desc#19, d_week_seq#29, p_promo_sk#38]

(61) Exchange
Input [5]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#16, i_item_desc#19, d_week_seq#29]
Arguments: hashpartitioning(cs_item_sk#4, cs_order_number#6, 5), ENSURE_REQUIREMENTS, [id=#40]

(62) Sort [codegen id : 11]
Input [5]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#16, i_item_desc#19, d_week_seq#29]
Arguments: [cs_item_sk#4 ASC NULLS FIRST, cs_order_number#6 ASC NULLS FIRST], false, 0

(63) Scan parquet default.catalog_returns
Output [3]: [cr_item_sk#41, cr_order_number#42, cr_returned_date_sk#43]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int>

(64) ColumnarToRow [codegen id : 12]
Input [3]: [cr_item_sk#41, cr_order_number#42, cr_returned_date_sk#43]

(65) Filter [codegen id : 12]
Input [3]: [cr_item_sk#41, cr_order_number#42, cr_returned_date_sk#43]
Condition : (isnotnull(cr_item_sk#41) AND isnotnull(cr_order_number#42))

(66) Project [codegen id : 12]
Output [2]: [cr_item_sk#41, cr_order_number#42]
Input [3]: [cr_item_sk#41, cr_order_number#42, cr_returned_date_sk#43]

(67) Exchange
Input [2]: [cr_item_sk#41, cr_order_number#42]
Arguments: hashpartitioning(cr_item_sk#41, cr_order_number#42, 5), ENSURE_REQUIREMENTS, [id=#44]

(68) Sort [codegen id : 13]
Input [2]: [cr_item_sk#41, cr_order_number#42]
Arguments: [cr_item_sk#41 ASC NULLS FIRST, cr_order_number#42 ASC NULLS FIRST], false, 0

(69) SortMergeJoin
Left keys [2]: [cs_item_sk#4, cs_order_number#6]
Right keys [2]: [cr_item_sk#41, cr_order_number#42]
Join condition: None

(70) Project [codegen id : 14]
Output [3]: [w_warehouse_name#16, i_item_desc#19, d_week_seq#29]
Input [7]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#16, i_item_desc#19, d_week_seq#29, cr_item_sk#41, cr_order_number#42]

(71) HashAggregate [codegen id : 14]
Input [3]: [w_warehouse_name#16, i_item_desc#19, d_week_seq#29]
Keys [3]: [i_item_desc#19, w_warehouse_name#16, d_week_seq#29]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#45]
Results [4]: [i_item_desc#19, w_warehouse_name#16, d_week_seq#29, count#46]

(72) Exchange
Input [4]: [i_item_desc#19, w_warehouse_name#16, d_week_seq#29, count#46]
Arguments: hashpartitioning(i_item_desc#19, w_warehouse_name#16, d_week_seq#29, 5), ENSURE_REQUIREMENTS, [id=#47]

(73) HashAggregate [codegen id : 15]
Input [4]: [i_item_desc#19, w_warehouse_name#16, d_week_seq#29, count#46]
Keys [3]: [i_item_desc#19, w_warehouse_name#16, d_week_seq#29]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#48]
Results [6]: [i_item_desc#19, w_warehouse_name#16, d_week_seq#29, count(1)#48 AS no_promo#49, count(1)#48 AS promo#50, count(1)#48 AS total_cnt#51]

(74) TakeOrderedAndProject
Input [6]: [i_item_desc#19, w_warehouse_name#16, d_week_seq#29, no_promo#49, promo#50, total_cnt#51]
Arguments: 100, [total_cnt#51 DESC NULLS LAST, i_item_desc#19 ASC NULLS FIRST, w_warehouse_name#16 ASC NULLS FIRST, d_week_seq#29 ASC NULLS FIRST], [i_item_desc#19, w_warehouse_name#16, d_week_seq#29, no_promo#49, promo#50, total_cnt#51]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#8 IN dynamicpruning#9
ReusedExchange (75)


(75) ReusedExchange [Reuses operator id: 40]
Output [3]: [d_date_sk#27, d_date#28, d_week_seq#29]


