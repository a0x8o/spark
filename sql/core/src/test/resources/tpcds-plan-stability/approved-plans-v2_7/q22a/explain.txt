== Physical Plan ==
TakeOrderedAndProject (49)
+- Union (48)
   :- * HashAggregate (27)
   :  +- * HashAggregate (26)
   :     +- * HashAggregate (25)
   :        +- Exchange (24)
   :           +- * HashAggregate (23)
   :              +- * Project (22)
   :                 +- * BroadcastHashJoin Inner BuildRight (21)
   :                    :- * Project (16)
   :                    :  +- * BroadcastHashJoin Inner BuildRight (15)
   :                    :     :- * Project (10)
   :                    :     :  +- * BroadcastHashJoin Inner BuildRight (9)
   :                    :     :     :- * Filter (3)
   :                    :     :     :  +- * ColumnarToRow (2)
   :                    :     :     :     +- Scan parquet default.inventory (1)
   :                    :     :     +- BroadcastExchange (8)
   :                    :     :        +- * Project (7)
   :                    :     :           +- * Filter (6)
   :                    :     :              +- * ColumnarToRow (5)
   :                    :     :                 +- Scan parquet default.date_dim (4)
   :                    :     +- BroadcastExchange (14)
   :                    :        +- * Filter (13)
   :                    :           +- * ColumnarToRow (12)
   :                    :              +- Scan parquet default.item (11)
   :                    +- BroadcastExchange (20)
   :                       +- * Filter (19)
   :                          +- * ColumnarToRow (18)
   :                             +- Scan parquet default.warehouse (17)
   :- * HashAggregate (32)
   :  +- Exchange (31)
   :     +- * HashAggregate (30)
   :        +- * HashAggregate (29)
   :           +- ReusedExchange (28)
   :- * HashAggregate (37)
   :  +- Exchange (36)
   :     +- * HashAggregate (35)
   :        +- * HashAggregate (34)
   :           +- ReusedExchange (33)
   :- * HashAggregate (42)
   :  +- Exchange (41)
   :     +- * HashAggregate (40)
   :        +- * HashAggregate (39)
   :           +- ReusedExchange (38)
   +- * HashAggregate (47)
      +- Exchange (46)
         +- * HashAggregate (45)
            +- * HashAggregate (44)
               +- ReusedExchange (43)


(1) Scan parquet default.inventory
Output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(inv_date_sk#4), dynamicpruningexpression(inv_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 4]
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]

(3) Filter [codegen id : 4]
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Condition : (isnotnull(inv_item_sk#1) AND isnotnull(inv_warehouse_sk#2))

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#6, d_month_seq#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#6, d_month_seq#7]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#6, d_month_seq#7]
Condition : (((isnotnull(d_month_seq#7) AND (d_month_seq#7 >= 1212)) AND (d_month_seq#7 <= 1223)) AND isnotnull(d_date_sk#6))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#6]
Input [2]: [d_date_sk#6, d_month_seq#7]

(8) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#8]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#4]
Right keys [1]: [d_date_sk#6]
Join condition: None

(10) Project [codegen id : 4]
Output [3]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]
Input [5]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, d_date_sk#6]

(11) Scan parquet default.item
Output [5]: [i_item_sk#9, i_brand#10, i_class#11, i_category#12, i_product_name#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

(12) ColumnarToRow [codegen id : 2]
Input [5]: [i_item_sk#9, i_brand#10, i_class#11, i_category#12, i_product_name#13]

(13) Filter [codegen id : 2]
Input [5]: [i_item_sk#9, i_brand#10, i_class#11, i_category#12, i_product_name#13]
Condition : isnotnull(i_item_sk#9)

(14) BroadcastExchange
Input [5]: [i_item_sk#9, i_brand#10, i_class#11, i_category#12, i_product_name#13]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#14]

(15) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#1]
Right keys [1]: [i_item_sk#9]
Join condition: None

(16) Project [codegen id : 4]
Output [6]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#10, i_class#11, i_category#12, i_product_name#13]
Input [8]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, i_item_sk#9, i_brand#10, i_class#11, i_category#12, i_product_name#13]

(17) Scan parquet default.warehouse
Output [1]: [w_warehouse_sk#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int>

(18) ColumnarToRow [codegen id : 3]
Input [1]: [w_warehouse_sk#15]

(19) Filter [codegen id : 3]
Input [1]: [w_warehouse_sk#15]
Condition : isnotnull(w_warehouse_sk#15)

(20) BroadcastExchange
Input [1]: [w_warehouse_sk#15]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#16]

(21) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#2]
Right keys [1]: [w_warehouse_sk#15]
Join condition: None

(22) Project [codegen id : 4]
Output [5]: [inv_quantity_on_hand#3, i_brand#10, i_class#11, i_category#12, i_product_name#13]
Input [7]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#10, i_class#11, i_category#12, i_product_name#13, w_warehouse_sk#15]

(23) HashAggregate [codegen id : 4]
Input [5]: [inv_quantity_on_hand#3, i_brand#10, i_class#11, i_category#12, i_product_name#13]
Keys [4]: [i_product_name#13, i_brand#10, i_class#11, i_category#12]
Functions [1]: [partial_avg(inv_quantity_on_hand#3)]
Aggregate Attributes [2]: [sum#17, count#18]
Results [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#19, count#20]

(24) Exchange
Input [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#19, count#20]
Arguments: hashpartitioning(i_product_name#13, i_brand#10, i_class#11, i_category#12, 5), ENSURE_REQUIREMENTS, [id=#21]

(25) HashAggregate [codegen id : 5]
Input [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#19, count#20]
Keys [4]: [i_product_name#13, i_brand#10, i_class#11, i_category#12]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#22]
Results [5]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, avg(inv_quantity_on_hand#3)#22 AS qoh#23]

(26) HashAggregate [codegen id : 5]
Input [5]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, qoh#23]
Keys [4]: [i_product_name#13, i_brand#10, i_class#11, i_category#12]
Functions [1]: [partial_avg(qoh#23)]
Aggregate Attributes [2]: [sum#24, count#25]
Results [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#26, count#27]

(27) HashAggregate [codegen id : 5]
Input [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#26, count#27]
Keys [4]: [i_product_name#13, i_brand#10, i_class#11, i_category#12]
Functions [1]: [avg(qoh#23)]
Aggregate Attributes [1]: [avg(qoh#23)#28]
Results [5]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, avg(qoh#23)#28 AS qoh#29]

(28) ReusedExchange [Reuses operator id: unknown]
Output [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#30, count#31]

(29) HashAggregate [codegen id : 10]
Input [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#30, count#31]
Keys [4]: [i_product_name#13, i_brand#10, i_class#11, i_category#12]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#32]
Results [4]: [i_product_name#13, i_brand#10, i_class#11, avg(inv_quantity_on_hand#3)#32 AS qoh#23]

(30) HashAggregate [codegen id : 10]
Input [4]: [i_product_name#13, i_brand#10, i_class#11, qoh#23]
Keys [3]: [i_product_name#13, i_brand#10, i_class#11]
Functions [1]: [partial_avg(qoh#23)]
Aggregate Attributes [2]: [sum#33, count#34]
Results [5]: [i_product_name#13, i_brand#10, i_class#11, sum#35, count#36]

(31) Exchange
Input [5]: [i_product_name#13, i_brand#10, i_class#11, sum#35, count#36]
Arguments: hashpartitioning(i_product_name#13, i_brand#10, i_class#11, 5), ENSURE_REQUIREMENTS, [id=#37]

(32) HashAggregate [codegen id : 11]
Input [5]: [i_product_name#13, i_brand#10, i_class#11, sum#35, count#36]
Keys [3]: [i_product_name#13, i_brand#10, i_class#11]
Functions [1]: [avg(qoh#23)]
Aggregate Attributes [1]: [avg(qoh#23)#38]
Results [5]: [i_product_name#13, i_brand#10, i_class#11, null AS i_category#39, avg(qoh#23)#38 AS qoh#40]

(33) ReusedExchange [Reuses operator id: unknown]
Output [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#41, count#42]

(34) HashAggregate [codegen id : 16]
Input [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#41, count#42]
Keys [4]: [i_product_name#13, i_brand#10, i_class#11, i_category#12]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#43]
Results [3]: [i_product_name#13, i_brand#10, avg(inv_quantity_on_hand#3)#43 AS qoh#23]

(35) HashAggregate [codegen id : 16]
Input [3]: [i_product_name#13, i_brand#10, qoh#23]
Keys [2]: [i_product_name#13, i_brand#10]
Functions [1]: [partial_avg(qoh#23)]
Aggregate Attributes [2]: [sum#44, count#45]
Results [4]: [i_product_name#13, i_brand#10, sum#46, count#47]

(36) Exchange
Input [4]: [i_product_name#13, i_brand#10, sum#46, count#47]
Arguments: hashpartitioning(i_product_name#13, i_brand#10, 5), ENSURE_REQUIREMENTS, [id=#48]

(37) HashAggregate [codegen id : 17]
Input [4]: [i_product_name#13, i_brand#10, sum#46, count#47]
Keys [2]: [i_product_name#13, i_brand#10]
Functions [1]: [avg(qoh#23)]
Aggregate Attributes [1]: [avg(qoh#23)#49]
Results [5]: [i_product_name#13, i_brand#10, null AS i_class#50, null AS i_category#51, avg(qoh#23)#49 AS qoh#52]

(38) ReusedExchange [Reuses operator id: unknown]
Output [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#53, count#54]

(39) HashAggregate [codegen id : 22]
Input [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#53, count#54]
Keys [4]: [i_product_name#13, i_brand#10, i_class#11, i_category#12]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#55]
Results [2]: [i_product_name#13, avg(inv_quantity_on_hand#3)#55 AS qoh#23]

(40) HashAggregate [codegen id : 22]
Input [2]: [i_product_name#13, qoh#23]
Keys [1]: [i_product_name#13]
Functions [1]: [partial_avg(qoh#23)]
Aggregate Attributes [2]: [sum#56, count#57]
Results [3]: [i_product_name#13, sum#58, count#59]

(41) Exchange
Input [3]: [i_product_name#13, sum#58, count#59]
Arguments: hashpartitioning(i_product_name#13, 5), ENSURE_REQUIREMENTS, [id=#60]

(42) HashAggregate [codegen id : 23]
Input [3]: [i_product_name#13, sum#58, count#59]
Keys [1]: [i_product_name#13]
Functions [1]: [avg(qoh#23)]
Aggregate Attributes [1]: [avg(qoh#23)#61]
Results [5]: [i_product_name#13, null AS i_brand#62, null AS i_class#63, null AS i_category#64, avg(qoh#23)#61 AS qoh#65]

(43) ReusedExchange [Reuses operator id: unknown]
Output [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#66, count#67]

(44) HashAggregate [codegen id : 28]
Input [6]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, sum#66, count#67]
Keys [4]: [i_product_name#13, i_brand#10, i_class#11, i_category#12]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#68]
Results [1]: [avg(inv_quantity_on_hand#3)#68 AS qoh#23]

(45) HashAggregate [codegen id : 28]
Input [1]: [qoh#23]
Keys: []
Functions [1]: [partial_avg(qoh#23)]
Aggregate Attributes [2]: [sum#69, count#70]
Results [2]: [sum#71, count#72]

(46) Exchange
Input [2]: [sum#71, count#72]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#73]

(47) HashAggregate [codegen id : 29]
Input [2]: [sum#71, count#72]
Keys: []
Functions [1]: [avg(qoh#23)]
Aggregate Attributes [1]: [avg(qoh#23)#74]
Results [5]: [null AS i_product_name#75, null AS i_brand#76, null AS i_class#77, null AS i_category#78, avg(qoh#23)#74 AS qoh#79]

(48) Union

(49) TakeOrderedAndProject
Input [5]: [i_product_name#13, i_brand#10, i_class#11, i_category#12, qoh#29]
Arguments: 100, [qoh#29 ASC NULLS FIRST, i_product_name#13 ASC NULLS FIRST, i_brand#10 ASC NULLS FIRST, i_class#11 ASC NULLS FIRST, i_category#12 ASC NULLS FIRST], [i_product_name#13, i_brand#10, i_class#11, i_category#12, qoh#29]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = inv_date_sk#4 IN dynamicpruning#5
ReusedExchange (50)


(50) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#6]


