== Physical Plan ==
TakeOrderedAndProject (38)
+- * Project (37)
   +- Window (36)
      +- * Sort (35)
         +- Exchange (34)
            +- * HashAggregate (33)
               +- Exchange (32)
                  +- * HashAggregate (31)
                     +- Union (30)
                        :- * HashAggregate (19)
                        :  +- Exchange (18)
                        :     +- * HashAggregate (17)
                        :        +- * Project (16)
                        :           +- * BroadcastHashJoin Inner BuildRight (15)
                        :              :- * Project (10)
                        :              :  +- * BroadcastHashJoin Inner BuildRight (9)
                        :              :     :- * Filter (3)
                        :              :     :  +- * ColumnarToRow (2)
                        :              :     :     +- Scan parquet default.web_sales (1)
                        :              :     +- BroadcastExchange (8)
                        :              :        +- * Project (7)
                        :              :           +- * Filter (6)
                        :              :              +- * ColumnarToRow (5)
                        :              :                 +- Scan parquet default.date_dim (4)
                        :              +- BroadcastExchange (14)
                        :                 +- * Filter (13)
                        :                    +- * ColumnarToRow (12)
                        :                       +- Scan parquet default.item (11)
                        :- * HashAggregate (24)
                        :  +- Exchange (23)
                        :     +- * HashAggregate (22)
                        :        +- * HashAggregate (21)
                        :           +- ReusedExchange (20)
                        +- * HashAggregate (29)
                           +- Exchange (28)
                              +- * HashAggregate (27)
                                 +- * HashAggregate (26)
                                    +- ReusedExchange (25)


(1) Scan parquet default.web_sales
Output [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#3), dynamicpruningexpression(ws_sold_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_net_paid:decimal(7,2)>

(2) ColumnarToRow [codegen id : 3]
Input [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]

(3) Filter [codegen id : 3]
Input [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]
Condition : isnotnull(ws_item_sk#1)

(4) Scan parquet default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#6]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1212)) AND (d_month_seq#6 <= 1223)) AND isnotnull(d_date_sk#5))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [2]: [d_date_sk#5, d_month_seq#6]

(8) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#7]

(9) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_sold_date_sk#3]
Right keys [1]: [d_date_sk#5]
Join condition: None

(10) Project [codegen id : 3]
Output [2]: [ws_item_sk#1, ws_net_paid#2]
Input [4]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3, d_date_sk#5]

(11) Scan parquet default.item
Output [3]: [i_item_sk#8, i_class#9, i_category#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>

(12) ColumnarToRow [codegen id : 2]
Input [3]: [i_item_sk#8, i_class#9, i_category#10]

(13) Filter [codegen id : 2]
Input [3]: [i_item_sk#8, i_class#9, i_category#10]
Condition : isnotnull(i_item_sk#8)

(14) BroadcastExchange
Input [3]: [i_item_sk#8, i_class#9, i_category#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#11]

(15) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_item_sk#1]
Right keys [1]: [i_item_sk#8]
Join condition: None

(16) Project [codegen id : 3]
Output [3]: [ws_net_paid#2, i_class#9, i_category#10]
Input [5]: [ws_item_sk#1, ws_net_paid#2, i_item_sk#8, i_class#9, i_category#10]

(17) HashAggregate [codegen id : 3]
Input [3]: [ws_net_paid#2, i_class#9, i_category#10]
Keys [2]: [i_category#10, i_class#9]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#2))]
Aggregate Attributes [1]: [sum#12]
Results [3]: [i_category#10, i_class#9, sum#13]

(18) Exchange
Input [3]: [i_category#10, i_class#9, sum#13]
Arguments: hashpartitioning(i_category#10, i_class#9, 5), ENSURE_REQUIREMENTS, [id=#14]

(19) HashAggregate [codegen id : 4]
Input [3]: [i_category#10, i_class#9, sum#13]
Keys [2]: [i_category#10, i_class#9]
Functions [1]: [sum(UnscaledValue(ws_net_paid#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#2))#15]
Results [6]: [cast(MakeDecimal(sum(UnscaledValue(ws_net_paid#2))#15,17,2) as decimal(27,2)) AS total_sum#16, i_category#10, i_class#9, 0 AS g_category#17, 0 AS g_class#18, 0 AS lochierarchy#19]

(20) ReusedExchange [Reuses operator id: unknown]
Output [3]: [i_category#10, i_class#9, sum#20]

(21) HashAggregate [codegen id : 8]
Input [3]: [i_category#10, i_class#9, sum#20]
Keys [2]: [i_category#10, i_class#9]
Functions [1]: [sum(UnscaledValue(ws_net_paid#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#2))#21]
Results [2]: [MakeDecimal(sum(UnscaledValue(ws_net_paid#2))#21,17,2) AS total_sum#22, i_category#10]

(22) HashAggregate [codegen id : 8]
Input [2]: [total_sum#22, i_category#10]
Keys [1]: [i_category#10]
Functions [1]: [partial_sum(total_sum#22)]
Aggregate Attributes [2]: [sum#23, isEmpty#24]
Results [3]: [i_category#10, sum#25, isEmpty#26]

(23) Exchange
Input [3]: [i_category#10, sum#25, isEmpty#26]
Arguments: hashpartitioning(i_category#10, 5), ENSURE_REQUIREMENTS, [id=#27]

(24) HashAggregate [codegen id : 9]
Input [3]: [i_category#10, sum#25, isEmpty#26]
Keys [1]: [i_category#10]
Functions [1]: [sum(total_sum#22)]
Aggregate Attributes [1]: [sum(total_sum#22)#28]
Results [6]: [sum(total_sum#22)#28 AS total_sum#29, i_category#10, null AS i_class#30, 0 AS g_category#31, 1 AS g_class#32, 1 AS lochierarchy#33]

(25) ReusedExchange [Reuses operator id: unknown]
Output [3]: [i_category#10, i_class#9, sum#34]

(26) HashAggregate [codegen id : 13]
Input [3]: [i_category#10, i_class#9, sum#34]
Keys [2]: [i_category#10, i_class#9]
Functions [1]: [sum(UnscaledValue(ws_net_paid#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_net_paid#2))#35]
Results [1]: [MakeDecimal(sum(UnscaledValue(ws_net_paid#2))#35,17,2) AS total_sum#22]

(27) HashAggregate [codegen id : 13]
Input [1]: [total_sum#22]
Keys: []
Functions [1]: [partial_sum(total_sum#22)]
Aggregate Attributes [2]: [sum#36, isEmpty#37]
Results [2]: [sum#38, isEmpty#39]

(28) Exchange
Input [2]: [sum#38, isEmpty#39]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#40]

(29) HashAggregate [codegen id : 14]
Input [2]: [sum#38, isEmpty#39]
Keys: []
Functions [1]: [sum(total_sum#22)]
Aggregate Attributes [1]: [sum(total_sum#22)#41]
Results [6]: [sum(total_sum#22)#41 AS total_sum#42, null AS i_category#43, null AS i_class#44, 1 AS g_category#45, 1 AS g_class#46, 2 AS lochierarchy#47]

(30) Union

(31) HashAggregate [codegen id : 15]
Input [6]: [total_sum#16, i_category#10, i_class#9, g_category#17, g_class#18, lochierarchy#19]
Keys [6]: [total_sum#16, i_category#10, i_class#9, g_category#17, g_class#18, lochierarchy#19]
Functions: []
Aggregate Attributes: []
Results [6]: [total_sum#16, i_category#10, i_class#9, g_category#17, g_class#18, lochierarchy#19]

(32) Exchange
Input [6]: [total_sum#16, i_category#10, i_class#9, g_category#17, g_class#18, lochierarchy#19]
Arguments: hashpartitioning(total_sum#16, i_category#10, i_class#9, g_category#17, g_class#18, lochierarchy#19, 5), ENSURE_REQUIREMENTS, [id=#48]

(33) HashAggregate [codegen id : 16]
Input [6]: [total_sum#16, i_category#10, i_class#9, g_category#17, g_class#18, lochierarchy#19]
Keys [6]: [total_sum#16, i_category#10, i_class#9, g_category#17, g_class#18, lochierarchy#19]
Functions: []
Aggregate Attributes: []
Results [5]: [total_sum#16, i_category#10, i_class#9, lochierarchy#19, CASE WHEN (g_class#18 = 0) THEN i_category#10 END AS _w0#49]

(34) Exchange
Input [5]: [total_sum#16, i_category#10, i_class#9, lochierarchy#19, _w0#49]
Arguments: hashpartitioning(lochierarchy#19, _w0#49, 5), ENSURE_REQUIREMENTS, [id=#50]

(35) Sort [codegen id : 17]
Input [5]: [total_sum#16, i_category#10, i_class#9, lochierarchy#19, _w0#49]
Arguments: [lochierarchy#19 ASC NULLS FIRST, _w0#49 ASC NULLS FIRST, total_sum#16 DESC NULLS LAST], false, 0

(36) Window
Input [5]: [total_sum#16, i_category#10, i_class#9, lochierarchy#19, _w0#49]
Arguments: [rank(total_sum#16) windowspecdefinition(lochierarchy#19, _w0#49, total_sum#16 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#51], [lochierarchy#19, _w0#49], [total_sum#16 DESC NULLS LAST]

(37) Project [codegen id : 18]
Output [5]: [total_sum#16, i_category#10, i_class#9, lochierarchy#19, rank_within_parent#51]
Input [6]: [total_sum#16, i_category#10, i_class#9, lochierarchy#19, _w0#49, rank_within_parent#51]

(38) TakeOrderedAndProject
Input [5]: [total_sum#16, i_category#10, i_class#9, lochierarchy#19, rank_within_parent#51]
Arguments: 100, [lochierarchy#19 DESC NULLS LAST, CASE WHEN (lochierarchy#19 = 0) THEN i_category#10 END ASC NULLS FIRST, rank_within_parent#51 ASC NULLS FIRST], [total_sum#16, i_category#10, i_class#9, lochierarchy#19, rank_within_parent#51]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#3 IN dynamicpruning#4
ReusedExchange (39)


(39) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#5]


