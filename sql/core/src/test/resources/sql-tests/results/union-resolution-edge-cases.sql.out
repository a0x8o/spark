-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TABLE t1(col1 TIMESTAMP, col2 STRING)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t2(col1 INT, col2 STRING)
-- !query schema
struct<>
-- !query output



-- !query
WITH cte AS (
    SELECT col1, col1 FROM t1
    UNION
    SELECT col1, col1 FROM t1
)
SELECT col1 FROM cte
-- !query schema
struct<col1:timestamp>
-- !query output



-- !query
WITH cte AS (
    SELECT col2, from_utc_timestamp(col1, 'unknown'), col2 FROM t1
    UNION ALL
    SELECT col2, from_utc_timestamp(col1, 'unknown'), col2 FROM t1
)
SELECT * FROM cte
-- !query schema
struct<col2:string,from_utc_timestamp(col1, unknown):timestamp,col2:string>
-- !query output



-- !query
SELECT col1 FROM t3 WHERE (col1, col1) IN (SELECT col1, col1 UNION SELECT col1, col1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`t3`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 18,
    "stopIndex" : 19,
    "fragment" : "t3"
  } ]
}


-- !query
SELECT col1, TRIM(col2), col1 FROM t2 UNION SELECT col1, col2, col1 FROM t2
-- !query schema
struct<col1:int,trim(col2):string,col1:int>
-- !query output



-- !query
SELECT col1, TRIM(col2), col1 FROM t2 MINUS SELECT col1, col2, col1 FROM t2
-- !query schema
struct<col1:int,trim(col2):string,col1:int>
-- !query output



-- !query
SELECT col1, LTRIM(col2), col1 FROM t2 MINUS SELECT col1, col2, col1 FROM t2
-- !query schema
struct<col1:int,ltrim(col2):string,col1:int>
-- !query output



-- !query
SELECT col1, RTRIM(col2), col1 FROM t2 EXCEPT SELECT col1, col2, col1 FROM t2
-- !query schema
struct<col1:int,rtrim(col2):string,col1:int>
-- !query output



-- !query
SELECT col1, LOWER(col2), col1 FROM t2 INTERSECT SELECT col1, col2, col1 FROM t2
-- !query schema
struct<col1:int,lower(col2):string,col1:int>
-- !query output



-- !query
DROP TABLE t1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE t2
-- !query schema
struct<>
-- !query output

