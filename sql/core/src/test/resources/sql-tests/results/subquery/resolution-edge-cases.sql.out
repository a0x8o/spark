-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TABLE t1(col1 INT, col2 STRING)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t2(col1 INT)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t3(col1 INT, col2 STRING)
-- !query schema
struct<>
-- !query output



-- !query
SELECT *
FROM (
    SELECT (
        SELECT t1.col1
        FROM t1
        WHERE t3.col1 = t1.col2
        LIMIT 1
    )
    FROM t3
    GROUP BY (
        SELECT t1.col1
        FROM t1
        WHERE t3.col1 = t1.col2
        LIMIT 1
    )
)
-- !query schema
struct<scalarsubquery(col1):int>
-- !query output



-- !query
SELECT *
FROM (
    SELECT 1 IN (
        SELECT t1.col1
        FROM t1
        WHERE t3.col1 = t1.col2
        LIMIT 1
    )
    FROM t3
    GROUP BY 1 IN (
        SELECT t1.col1
        FROM t1
        WHERE t3.col1 = t1.col2
        LIMIT 1
    )
)
-- !query schema
struct<(1 IN (listquery(col1))):boolean>
-- !query output



-- !query
SELECT *
FROM (
    SELECT EXISTS (
        SELECT t1.col1
        FROM t1
        WHERE t3.col1 = t1.col2
        LIMIT 1
    )
    FROM t3
    GROUP BY EXISTS (
        SELECT t1.col1
        FROM t1
        WHERE t3.col1 = t1.col2
        LIMIT 1
    )
)
-- !query schema
struct<exists(col1):boolean>
-- !query output



-- !query
SELECT col1 IN (SELECT col1 FROM t2)
FROM t2
GROUP BY col1 IN (SELECT col1 FROM t2), col1
ORDER BY col1 IN (SELECT col1 FROM t2)
-- !query schema
struct<(col1 IN (listquery())):boolean>
-- !query output



-- !query
SELECT col1 FROM t2 GROUP BY col1 IN (SELECT col1 FROM t2), col1 ORDER BY col1 IN (SELECT col1 FROM t2)
-- !query schema
struct<col1:int>
-- !query output



-- !query
SELECT col1 FROM t2 GROUP BY col1 ORDER BY 1 IN (SELECT 1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_SUBQUERY_EXPRESSION_CATEGORY.UNSUPPORTED_IN_EXISTS_SUBQUERY",
  "sqlState" : "0A000",
  "messageParameters" : {
    "treeNode" : "Sort [1 IN (list#x []) ASC NULLS FIRST], true\n:  +- Project [1 AS 1#x]\n:     +- OneRowRelation\n+- Aggregate [col1#x], [col1#x]\n   +- SubqueryAlias spark_catalog.default.t2\n      +- Relation spark_catalog.default.t2[col1#x] parquet\n"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 46,
    "stopIndex" : 58,
    "fragment" : "IN (SELECT 1)"
  } ]
}


-- !query
SELECT col1 AS a, a + 1 FROM t2 GROUP BY col1 ORDER BY 1 IN (SELECT 1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_SUBQUERY_EXPRESSION_CATEGORY.UNSUPPORTED_IN_EXISTS_SUBQUERY",
  "sqlState" : "0A000",
  "messageParameters" : {
    "treeNode" : "Sort [1 IN (list#x []) ASC NULLS FIRST], true\n:  +- Project [1 AS 1#x]\n:     +- OneRowRelation\n+- Project [a#x, (a#x + 1) AS (lateralAliasReference(a) + 1)#x]\n   +- Project [col1#x, col1#x AS a#x]\n      +- Aggregate [col1#x], [col1#x]\n         +- SubqueryAlias spark_catalog.default.t2\n            +- Relation spark_catalog.default.t2[col1#x] parquet\n"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 58,
    "stopIndex" : 70,
    "fragment" : "IN (SELECT 1)"
  } ]
}


-- !query
DROP TABLE t1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE t2
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE t3
-- !query schema
struct<>
-- !query output

