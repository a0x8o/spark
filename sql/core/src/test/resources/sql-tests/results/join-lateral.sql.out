-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 66


-- !query
CREATE VIEW t1(c1, c2) AS VALUES (0, 1), (1, 2)
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW t2(c1, c2) AS VALUES (0, 2), (0, 3)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM t1, LATERAL (SELECT c1)
-- !query schema
struct<c1:int,c2:int,c1:int>
-- !query output
0	1	0
1	2	1


-- !query
SELECT * FROM t1, LATERAL (SELECT c1 FROM t2)
-- !query schema
struct<c1:int,c2:int,c1:int>
-- !query output
0	1	0
0	1	0
1	2	0
1	2	0


-- !query
SELECT * FROM t1, LATERAL (SELECT t1.c1 FROM t2)
-- !query schema
struct<c1:int,c2:int,c1:int>
-- !query output
0	1	0
0	1	0
1	2	1
1	2	1


-- !query
SELECT * FROM t1, LATERAL (SELECT t1.c1 + t2.c1 FROM t2)
-- !query schema
struct<c1:int,c2:int,(outer(spark_catalog.default.t1.c1) + c1):int>
-- !query output
0	1	0
0	1	0
1	2	1
1	2	1


-- !query
SELECT * FROM t1, LATERAL (SELECT *)
-- !query schema
struct<c1:int,c2:int>
-- !query output
0	1
1	2


-- !query
SELECT * FROM t1, LATERAL (SELECT * FROM t2)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int>
-- !query output
0	1	0	2
0	1	0	3
1	2	0	2
1	2	0	3


-- !query
SELECT * FROM t1, LATERAL (SELECT t1.*)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int>
-- !query output
0	1	0	1
1	2	1	2


-- !query
SELECT * FROM t1, LATERAL (SELECT t1.*, t2.* FROM t2)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int,c1:int,c2:int>
-- !query output
0	1	0	1	0	2
0	1	0	1	0	3
1	2	1	2	0	2
1	2	1	2	0	3


-- !query
SELECT * FROM t1, LATERAL (SELECT t1.* FROM t2 AS t1)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int>
-- !query output
0	1	0	2
0	1	0	3
1	2	0	2
1	2	0	3


-- !query
SELECT * FROM t1, LATERAL (SELECT t1.*, t2.* FROM t2, LATERAL (SELECT t1.*, t2.*, t3.* FROM t2 AS t3))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 't1.*' given input columns 'c1, c2'; line 1 pos 70


-- !query
SELECT * FROM t1 JOIN LATERAL (SELECT c1 + c2 AS c3) ON c2 = c3
-- !query schema
struct<c1:int,c2:int,c3:int>
-- !query output
0	1	1


-- !query
SELECT * FROM t1 LEFT JOIN LATERAL (SELECT c1 + c2 AS c3) ON c2 = c3
-- !query schema
struct<c1:int,c2:int,c3:int>
-- !query output
0	1	1
1	2	NULL


-- !query
SELECT * FROM t1 CROSS JOIN LATERAL (SELECT c1 + c2 AS c3)
-- !query schema
struct<c1:int,c2:int,c3:int>
-- !query output
0	1	1
1	2	3


-- !query
SELECT * FROM t1 NATURAL JOIN LATERAL (SELECT c1 + c2 AS c2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException

LATERAL join with NATURAL join is not supported(line 1, pos 14)

== SQL ==
SELECT * FROM t1 NATURAL JOIN LATERAL (SELECT c1 + c2 AS c2)
--------------^^^


-- !query
SELECT * FROM t1 JOIN LATERAL (SELECT c1 + c2 AS c2) USING (c2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException

LATERAL join with USING join is not supported(line 1, pos 14)

== SQL ==
SELECT * FROM t1 JOIN LATERAL (SELECT c1 + c2 AS c2) USING (c2)
--------------^^^


-- !query
SELECT * FROM LATERAL (SELECT * FROM t1)
-- !query schema
struct<c1:int,c2:int>
-- !query output
0	1
1	2


-- !query
SELECT * FROM t1, LATERAL (SELECT * FROM t2)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int>
-- !query output
0	1	0	2
0	1	0	3
1	2	0	2
1	2	0	3


-- !query
SELECT * FROM LATERAL (SELECT * FROM t1), LATERAL (SELECT * FROM t2)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int>
-- !query output
0	1	0	2
0	1	0	3
1	2	0	2
1	2	0	3


-- !query
SELECT * FROM LATERAL (SELECT * FROM t1) JOIN LATERAL (SELECT * FROM t2)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int>
-- !query output
0	1	0	2
0	1	0	3
1	2	0	2
1	2	0	3


-- !query
SELECT a, b FROM t1, LATERAL (SELECT c1, c2) s(a, b)
-- !query schema
struct<a:int,b:int>
-- !query output
0	1
1	2


-- !query
SELECT * FROM (SELECT 1 AS c1, 2 AS c2), LATERAL (SELECT c1, c2)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int>
-- !query output
1	2	1	2


-- !query
SELECT * FROM t1, LATERAL (SELECT c2 FROM t2 WHERE t1.c1 = t2.c1)
-- !query schema
struct<c1:int,c2:int,c2:int>
-- !query output
0	1	2
0	1	3


-- !query
SELECT * FROM t1, LATERAL (SELECT c2 FROM t2 WHERE t1.c2 < t2.c2)
-- !query schema
struct<c1:int,c2:int,c2:int>
-- !query output
0	1	2
0	1	3
1	2	3


-- !query
SELECT * FROM t1 JOIN t2 JOIN LATERAL (SELECT t1.c2 + t2.c2)
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int,(outer(spark_catalog.default.t1.c2) + outer(spark_catalog.default.t2.c2)):int>
-- !query output
0	1	0	2	3
0	1	0	3	4
1	2	0	2	4
1	2	0	3	5


-- !query
SELECT * FROM t1 JOIN LATERAL (SELECT t1.c1 AS a, t2.c1 AS b) s JOIN t2 ON s.b = t2.c1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 't2.c1' given input columns: []; line 1 pos 50


-- !query
SELECT * FROM t1,
LATERAL (SELECT c1 + c2 AS a),
LATERAL (SELECT c1 - c2 AS b),
LATERAL (SELECT a * b AS c)
-- !query schema
struct<c1:int,c2:int,a:int,b:int,c:int>
-- !query output
0	1	1	-1	-1
1	2	3	-1	-3


-- !query
SELECT * FROM t1
LEFT OUTER JOIN LATERAL (SELECT c2 FROM t2 WHERE t1.c1 = t2.c1) s
LEFT OUTER JOIN t1 t3 ON s.c2 = t3.c2
-- !query schema
struct<c1:int,c2:int,c2:int,c1:int,c2:int>
-- !query output
0	1	2	1	2
0	1	3	NULL	NULL
1	2	NULL	NULL	NULL


-- !query
SELECT * FROM t1, LATERAL (SELECT * FROM t2, LATERAL (SELECT c1))
-- !query schema
struct<c1:int,c2:int,c1:int,c2:int,c1:int>
-- !query output
0	1	0	2	0
0	1	0	3	0
1	2	0	2	0
1	2	0	3	0


-- !query
SELECT * FROM t1, LATERAL (SELECT * FROM (SELECT c1 + 1 AS c1), LATERAL (SELECT c1))
-- !query schema
struct<c1:int,c2:int,c1:int,c1:int>
-- !query output
0	1	1	1
1	2	2	2


-- !query
SELECT * FROM t1, LATERAL (
  SELECT * FROM (SELECT c1, MIN(c2) m FROM t2 WHERE t1.c1 = t2.c1 GROUP BY c1) s,
  LATERAL (SELECT m WHERE m > c1)
)
-- !query schema
struct<c1:int,c2:int,c1:int,m:int,m:int>
-- !query output
0	1	0	2	2


-- !query
SELECT * FROM t1, LATERAL (SELECT * FROM t2, LATERAL (SELECT t1.c1 + t2.c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 't1.c1' given input columns: []; line 1 pos 61


-- !query
SELECT * FROM t1, LATERAL (SELECT * FROM (SELECT c1), LATERAL (SELECT c2))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 'c2' given input columns: []; line 1 pos 70


-- !query
SELECT * FROM t1, LATERAL (SELECT c2, (SELECT MIN(c2) FROM t2))
-- !query schema
struct<c1:int,c2:int,c2:int,scalarsubquery():int>
-- !query output
0	1	1	2
1	2	2	2


-- !query
SELECT * FROM t1, LATERAL (SELECT (SELECT SUM(c2) FROM t2 WHERE c1 = a) FROM (SELECT c1 AS a))
-- !query schema
struct<c1:int,c2:int,scalarsubquery(a):bigint>
-- !query output
0	1	5
1	2	NULL


-- !query
SELECT * FROM t1, LATERAL (SELECT c1, (SELECT SUM(c2) FROM t2 WHERE c1 = t1.c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
cannot resolve 't1.c1' given input columns: [spark_catalog.default.t2.c1, spark_catalog.default.t2.c2]; line 1 pos 73


-- !query
SELECT * FROM t1 WHERE c1 = (SELECT MIN(a) FROM t2, LATERAL (SELECT c1 AS a))
-- !query schema
struct<c1:int,c2:int>
-- !query output
0	1


-- !query
SELECT * FROM t1 WHERE c1 = (SELECT MIN(a) FROM t2, LATERAL (SELECT c1 AS a) WHERE c1 = t1.c1)
-- !query schema
struct<c1:int,c2:int>
-- !query output
0	1


-- !query
SELECT * FROM t1, LATERAL (SELECT COUNT(*) cnt FROM t2 WHERE c1 = t1.c1)
-- !query schema
struct<c1:int,c2:int,cnt:bigint>
-- !query output
0	1	2
1	2	0


-- !query
SELECT * FROM t1, LATERAL (SELECT COUNT(*) cnt, SUM(c2) sum FROM t2 WHERE c1 = t1.c1)
-- !query schema
struct<c1:int,c2:int,cnt:bigint,sum:bigint>
-- !query output
0	1	2	5
1	2	0	NULL


-- !query
SELECT * FROM t1, LATERAL (SELECT SUM(c2) IS NULL FROM t2 WHERE t1.c1 = t2.c1)
-- !query schema
struct<c1:int,c2:int,(sum(c2) IS NULL):boolean>
-- !query output
0	1	false
1	2	true


-- !query
SELECT * FROM t1, LATERAL (SELECT COUNT(*) + CASE WHEN sum(c2) IS NULL THEN 0 ELSE sum(c2) END FROM t2 WHERE t1.c1 = t2.c1)
-- !query schema
struct<c1:int,c2:int,(count(1) + CASE WHEN (sum(c2) IS NULL) THEN 0 ELSE sum(c2) END):bigint>
-- !query output
0	1	7
1	2	0


-- !query
SELECT * FROM t1, LATERAL (SELECT c1, COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1 GROUP BY c1)
-- !query schema
struct<c1:int,c2:int,c1:int,cnt:bigint>
-- !query output
0	1	0	2


-- !query
SELECT * FROM t1, LATERAL (SELECT c2, COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1 GROUP BY c2)
-- !query schema
struct<c1:int,c2:int,c2:int,cnt:bigint>
-- !query output
0	1	2	1
0	1	3	1


-- !query
SELECT * FROM t1 JOIN LATERAL (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1)
-- !query schema
struct<c1:int,c2:int,cnt:bigint>
-- !query output
0	1	2
1	2	0


-- !query
SELECT * FROM t1 LEFT JOIN LATERAL (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1)
-- !query schema
struct<c1:int,c2:int,cnt:bigint>
-- !query output
0	1	2
1	2	0


-- !query
SELECT * FROM t1 CROSS JOIN LATERAL (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1)
-- !query schema
struct<c1:int,c2:int,cnt:bigint>
-- !query output
0	1	2
1	2	0


-- !query
SELECT * FROM t1 LEFT JOIN LATERAL (SELECT c1, COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1 GROUP BY c1)
-- !query schema
struct<c1:int,c2:int,c1:int,cnt:bigint>
-- !query output
0	1	0	2
1	2	NULL	NULL


-- !query
SELECT * FROM t1 CROSS JOIN LATERAL (SELECT c1, COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1 GROUP BY c1)
-- !query schema
struct<c1:int,c2:int,c1:int,cnt:bigint>
-- !query output
0	1	0	2


-- !query
SELECT * FROM t1 JOIN LATERAL (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1) ON cnt + 1 = c1
-- !query schema
struct<c1:int,c2:int,cnt:bigint>
-- !query output
1	2	0


-- !query
SELECT * FROM t1, LATERAL (SELECT COUNT(*) cnt FROM t1 t2 WHERE t1.c1 = t2.c1)
-- !query schema
struct<c1:int,c2:int,cnt:bigint>
-- !query output
0	1	1
1	2	1


-- !query
SELECT * FROM t1, LATERAL (SELECT COUNT(*) cnt FROM t1 t2 WHERE t1.c1 = t2.c1 HAVING cnt > 0)
-- !query schema
struct<c1:int,c2:int,cnt:bigint>
-- !query output
0	1	1
1	2	1


-- !query
SELECT * FROM t1, LATERAL (SELECT SUM(cnt) FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1))
-- !query schema
struct<c1:int,c2:int,sum(cnt):bigint>
-- !query output
0	1	2
1	2	0


-- !query
SELECT * FROM t1, LATERAL (SELECT COUNT(cnt) FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1))
-- !query schema
struct<c1:int,c2:int,count(cnt):bigint>
-- !query output
0	1	1
1	2	1


-- !query
SELECT * FROM t1, LATERAL (SELECT SUM(cnt) FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1 GROUP BY c1))
-- !query schema
struct<c1:int,c2:int,sum(cnt):bigint>
-- !query output
0	1	2
1	2	NULL


-- !query
SELECT * FROM t1, LATERAL (
  SELECT COUNT(*) FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1)
  JOIN t2 ON cnt = t2.c1
)
-- !query schema
struct<c1:int,c2:int,count(1):bigint>
-- !query output
0	1	0
1	2	2


-- !query
SELECT * FROM t1, LATERAL (SELECT * FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1) WHERE cnt = c1 - 1)
-- !query schema
struct<c1:int,c2:int,cnt:bigint>
-- !query output
1	2	0


-- !query
SELECT * FROM t1, LATERAL (SELECT COUNT(*) FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1) WHERE cnt = c1 - 1)
-- !query schema
struct<c1:int,c2:int,count(1):bigint>
-- !query output
0	1	0
1	2	1


-- !query
SELECT * FROM t1, LATERAL (
  SELECT COUNT(*) FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1)
  WHERE cnt = c1 - 1 GROUP BY cnt
)
-- !query schema
struct<c1:int,c2:int,count(1):bigint>
-- !query output
1	2	1


-- !query
SELECT * FROM t1, LATERAL (
  SELECT * FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1)
  JOIN t2 ON cnt = t2.c1
)
-- !query schema
struct<c1:int,c2:int,cnt:bigint,c1:int,c2:int>
-- !query output
1	2	0	0	2
1	2	0	0	3


-- !query
SELECT * FROM t1, LATERAL (
  SELECT l.cnt + r.cnt
  FROM (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1) l
  JOIN (SELECT COUNT(*) cnt FROM t2 WHERE t1.c1 = t2.c1) r
)
-- !query schema
struct<c1:int,c2:int,(cnt + cnt):bigint>
-- !query output
0	1	4
1	2	0


-- !query
SELECT * FROM t1 LEFT JOIN LATERAL (SELECT MIN(c2) FROM t2 WHERE c1 = t1.c1 GROUP BY c1)
-- !query schema
struct<c1:int,c2:int,min(c2):int>
-- !query output
0	1	2
1	2	NULL


-- !query
WITH cte1 AS (
  SELECT c1 FROM t1
), cte2 AS (
  SELECT s.* FROM cte1, LATERAL (SELECT * FROM t2 WHERE c1 = cte1.c1) s
)
SELECT * FROM cte2
-- !query schema
struct<c1:int,c2:int>
-- !query output
0	2
0	3


-- !query
DROP VIEW t1
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW t2
-- !query schema
struct<>
-- !query output

