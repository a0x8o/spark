-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 23


-- !query
CREATE OR REPLACE TEMPORARY VIEW aggr AS SELECT * FROM VALUES
(0, 0), (0, 10), (0, 20), (0, 30), (0, 40), (1, 10), (1, 20), (2, 10), (2, 20), (2, 25), (2, 30), (3, 60), (4, null)
AS aggr(k, v)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW basic_pays AS SELECT * FROM VALUES
('Diane Murphy','Accounting',8435),
('Mary Patterson','Accounting',9998),
('Jeff Firrelli','Accounting',8992),
('William Patterson','Accounting',8870),
('Gerard Bondur','Accounting',11472),
('Anthony Bow','Accounting',6627),
('Leslie Jennings','IT',8113),
('Leslie Thompson','IT',5186),
('Julie Firrelli','Sales',9181),
('Steve Patterson','Sales',9441),
('Foon Yue Tseng','Sales',6660),
('George Vanauf','Sales',10563),
('Loui Bondur','SCM',10449),
('Gerard Hernandez','SCM',6949),
('Pamela Castillo','SCM',11303),
('Larry Bott','SCM',11798),
('Barry Jones','SCM',10586)
AS basic_pays(employee_name, department, salary)
-- !query schema
struct<>
-- !query output



-- !query
SELECT
  percentile_cont(0.25) WITHIN GROUP (ORDER BY v),
  percentile_cont(0.25) WITHIN GROUP (ORDER BY v DESC)
FROM aggr
-- !query schema
struct<percentile_cont(0.25) WITHIN GROUP (ORDER BY v):double,percentile_cont(0.25) WITHIN GROUP (ORDER BY v DESC):double>
-- !query output
10.0	30.0


-- !query
SELECT
  k,
  percentile_cont(0.25) WITHIN GROUP (ORDER BY v),
  percentile_cont(0.25) WITHIN GROUP (ORDER BY v DESC)
FROM aggr
GROUP BY k
ORDER BY k
-- !query schema
struct<k:int,percentile_cont(0.25) WITHIN GROUP (ORDER BY v):double,percentile_cont(0.25) WITHIN GROUP (ORDER BY v DESC):double>
-- !query output
0	10.0	30.0
1	12.5	17.5
2	17.5	26.25
3	60.0	60.0
4	NULL	NULL


-- !query
SELECT
  percentile_disc(0.25) WITHIN GROUP (ORDER BY v),
  percentile_disc(0.25) WITHIN GROUP (ORDER BY v DESC)
FROM aggr
-- !query schema
struct<percentile_disc(0.25) WITHIN GROUP (ORDER BY v):double,percentile_disc(0.25) WITHIN GROUP (ORDER BY v DESC):double>
-- !query output
10.0	30.0


-- !query
SELECT
  k,
  percentile_disc(0.25) WITHIN GROUP (ORDER BY v),
  percentile_disc(0.25) WITHIN GROUP (ORDER BY v DESC)
FROM aggr
GROUP BY k
ORDER BY k
-- !query schema
struct<k:int,percentile_disc(0.25) WITHIN GROUP (ORDER BY v):double,percentile_disc(0.25) WITHIN GROUP (ORDER BY v DESC):double>
-- !query output
0	10.0	30.0
1	10.0	20.0
2	10.0	30.0
3	60.0	60.0
4	NULL	NULL


-- !query
SELECT
  median(v),
  percentile(v, 0.5),
  percentile_cont(0.5) WITHIN GROUP (ORDER BY v)
FROM aggr
-- !query schema
struct<median(v):double,percentile(v, 0.5, 1):double,percentile_cont(0.5) WITHIN GROUP (ORDER BY v):double>
-- !query output
20.0	20.0	20.0


-- !query
SELECT
  k,
  median(v),
  percentile(v, 0.5),
  percentile_cont(0.5) WITHIN GROUP (ORDER BY v)
FROM aggr
GROUP BY k
ORDER BY k
-- !query schema
struct<k:int,median(v):double,percentile(v, 0.5, 1):double,percentile_cont(0.5) WITHIN GROUP (ORDER BY v):double>
-- !query output
0	20.0	20.0	20.0
1	15.0	15.0	15.0
2	22.5	22.5	22.5
3	60.0	60.0	60.0
4	NULL	NULL	NULL


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary) OVER (PARTITION BY department),
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary) OVER (PARTITION BY department),
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER (PARTITION BY department),
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER (PARTITION BY department)
FROM basic_pays
ORDER BY salary
-- !query schema
struct<employee_name:string,department:string,salary:int,percentile_cont(0.25) WITHIN GROUP (ORDER BY v) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_disc(0.25) WITHIN GROUP (ORDER BY v) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_cont(0.25) WITHIN GROUP (ORDER BY v DESC) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_disc(0.25) WITHIN GROUP (ORDER BY v DESC) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double>
-- !query output
Leslie Thompson	IT	5186	5917.75	5186.0	7381.25	8113.0
Anthony Bow	Accounting	6627	8543.75	8435.0	9746.5	9998.0
Foon Yue Tseng	Sales	6660	8550.75	6660.0	9721.5	10563.0
Gerard Hernandez	SCM	6949	10449.0	10449.0	11303.0	11303.0
Leslie Jennings	IT	8113	5917.75	5186.0	7381.25	8113.0
Diane Murphy	Accounting	8435	8543.75	8435.0	9746.5	9998.0
William Patterson	Accounting	8870	8543.75	8435.0	9746.5	9998.0
Jeff Firrelli	Accounting	8992	8543.75	8435.0	9746.5	9998.0
Julie Firrelli	Sales	9181	8550.75	6660.0	9721.5	10563.0
Steve Patterson	Sales	9441	8550.75	6660.0	9721.5	10563.0
Mary Patterson	Accounting	9998	8543.75	8435.0	9746.5	9998.0
Loui Bondur	SCM	10449	10449.0	10449.0	11303.0	11303.0
George Vanauf	Sales	10563	8550.75	6660.0	9721.5	10563.0
Barry Jones	SCM	10586	10449.0	10449.0	11303.0	11303.0
Pamela Castillo	SCM	11303	10449.0	10449.0	11303.0	11303.0
Gerard Bondur	Accounting	11472	8543.75	8435.0	9746.5	9998.0
Larry Bott	SCM	11798	10449.0	10449.0	11303.0	11303.0


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary) OVER (PARTITION BY department ORDER BY salary),
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER (PARTITION BY department ORDER BY salary)
FROM basic_pays
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'percentile_cont'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary) OVER (PARTITION BY department ORDER BY salary),
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER (PARTITION BY department ORDER BY salary)
FROM basic_pays
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'percentile_disc'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    median(salary) OVER (PARTITION BY department ORDER BY salary)
FROM basic_pays
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'median'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING),
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING)
FROM basic_pays
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'percentile_cont'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING),
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING)
FROM basic_pays
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'percentile_disc'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    median(salary) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING)
FROM basic_pays
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'median'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary) OVER w,
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary) OVER w,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER w,
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER w
FROM basic_pays
WINDOW w AS (PARTITION BY department)
ORDER BY salary
-- !query schema
struct<employee_name:string,department:string,salary:int,percentile_cont(0.25) WITHIN GROUP (ORDER BY v) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_disc(0.25) WITHIN GROUP (ORDER BY v) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_cont(0.25) WITHIN GROUP (ORDER BY v DESC) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_disc(0.25) WITHIN GROUP (ORDER BY v DESC) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double>
-- !query output
Leslie Thompson	IT	5186	5917.75	5186.0	7381.25	8113.0
Anthony Bow	Accounting	6627	8543.75	8435.0	9746.5	9998.0
Foon Yue Tseng	Sales	6660	8550.75	6660.0	9721.5	10563.0
Gerard Hernandez	SCM	6949	10449.0	10449.0	11303.0	11303.0
Leslie Jennings	IT	8113	5917.75	5186.0	7381.25	8113.0
Diane Murphy	Accounting	8435	8543.75	8435.0	9746.5	9998.0
William Patterson	Accounting	8870	8543.75	8435.0	9746.5	9998.0
Jeff Firrelli	Accounting	8992	8543.75	8435.0	9746.5	9998.0
Julie Firrelli	Sales	9181	8550.75	6660.0	9721.5	10563.0
Steve Patterson	Sales	9441	8550.75	6660.0	9721.5	10563.0
Mary Patterson	Accounting	9998	8543.75	8435.0	9746.5	9998.0
Loui Bondur	SCM	10449	10449.0	10449.0	11303.0	11303.0
George Vanauf	Sales	10563	8550.75	6660.0	9721.5	10563.0
Barry Jones	SCM	10586	10449.0	10449.0	11303.0	11303.0
Pamela Castillo	SCM	11303	10449.0	10449.0	11303.0	11303.0
Gerard Bondur	Accounting	11472	8543.75	8435.0	9746.5	9998.0
Larry Bott	SCM	11798	10449.0	10449.0	11303.0	11303.0


-- !query
SELECT
    employee_name,
    department,
    salary,
    median(salary) OVER w,
    percentile_cont(0.5) WITHIN GROUP (ORDER BY salary) OVER w,
    percentile_disc(0.5) WITHIN GROUP (ORDER BY salary) OVER w,
    percentile_cont(0.5) WITHIN GROUP (ORDER BY salary DESC) OVER w,
    percentile_disc(0.5) WITHIN GROUP (ORDER BY salary DESC) OVER w
FROM basic_pays
WHERE salary > 8900
WINDOW w AS (PARTITION BY department)
ORDER BY salary
-- !query schema
struct<employee_name:string,department:string,salary:int,median(salary) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_cont(0.5) WITHIN GROUP (ORDER BY v) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_disc(0.5) WITHIN GROUP (ORDER BY v) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_cont(0.5) WITHIN GROUP (ORDER BY v DESC) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double,percentile_disc(0.5) WITHIN GROUP (ORDER BY v DESC) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):double>
-- !query output
Jeff Firrelli	Accounting	8992	9998.0	9998.0	9998.0	9998.0	9998.0
Julie Firrelli	Sales	9181	9441.0	9441.0	9441.0	9441.0	9441.0
Steve Patterson	Sales	9441	9441.0	9441.0	9441.0	9441.0	9441.0
Mary Patterson	Accounting	9998	9998.0	9998.0	9998.0	9998.0	9998.0
Loui Bondur	SCM	10449	10944.5	10944.5	10586.0	10944.5	11303.0
George Vanauf	Sales	10563	9441.0	9441.0	9441.0	9441.0	9441.0
Barry Jones	SCM	10586	10944.5	10944.5	10586.0	10944.5	11303.0
Pamela Castillo	SCM	11303	10944.5	10944.5	10586.0	10944.5	11303.0
Gerard Bondur	Accounting	11472	9998.0	9998.0	9998.0	9998.0	9998.0
Larry Bott	SCM	11798	10944.5	10944.5	10586.0	10944.5	11303.0


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary) OVER w,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER w
FROM basic_pays
WINDOW w AS (PARTITION BY department ORDER BY salary)
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'percentile_cont'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary) OVER w,
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER w
FROM basic_pays
WINDOW w AS (PARTITION BY department ORDER BY salary)
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'percentile_disc'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    median(salary) OVER w
FROM basic_pays
WINDOW w AS (PARTITION BY department ORDER BY salary)
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'median'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary) OVER w,
    percentile_cont(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER w
FROM basic_pays
WINDOW w AS (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING)
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'percentile_cont'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary) OVER w,
    percentile_disc(0.25) WITHIN GROUP (ORDER BY salary DESC) OVER w
FROM basic_pays
WINDOW w AS (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING)
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'percentile_disc'.


-- !query
SELECT
    employee_name,
    department,
    salary,
    median(salary) OVER w
FROM basic_pays
WINDOW w AS (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING)
ORDER BY salary
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Cannot specify order by or frame for 'median'.
