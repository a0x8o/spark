-- Automatically generated by SQLQueryTestSuite
-- !query
SELECT mask('AbCD123-@$#')
-- !query schema
struct<mask(AbCD123-@$#, X, x, n, -1):string>
-- !query output
XxXXnnn-@$#


-- !query
SELECT mask('AbCD123-@$#', 'Q')
-- !query schema
struct<mask(AbCD123-@$#, Q, x, n, -1):string>
-- !query output
QxQQnnn-@$#


-- !query
SELECT mask('AbCD123-@$#', 'Q', 'q')
-- !query schema
struct<mask(AbCD123-@$#, Q, q, n, -1):string>
-- !query output
QqQQnnn-@$#


-- !query
SELECT mask('AbCD123-@$#', 'Q', 'q', 'd')
-- !query schema
struct<mask(AbCD123-@$#, Q, q, d, -1):string>
-- !query output
QqQQddd-@$#


-- !query
SELECT mask('AbCD123-@$#', 'Q', 'q', 'd', 'o')
-- !query schema
struct<mask(AbCD123-@$#, Q, q, d, o):string>
-- !query output
QqQQdddoooo


-- !query
SELECT mask('AbCD123-@$#', 'Qa', 'qa', 'da', 'oa')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.INPUT_SIZE_NOT_ONE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "upperChar",
    "sqlExpr" : "\"mask(AbCD123-@$#, Qa, qa, da, oa)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 50,
    "fragment" : "mask('AbCD123-@$#', 'Qa', 'qa', 'da', 'oa')"
  } ]
}


-- !query
SELECT mask('AbCD123-@$#', -1, 'q', 'd', 'o')
-- !query schema
struct<mask(AbCD123-@$#, -1, q, d, o):string>
-- !query output
AqCDdddoooo


-- !query
SELECT mask('AbCD123-@$#', -1, -1, 'd', 'o')
-- !query schema
struct<mask(AbCD123-@$#, -1, -1, d, o):string>
-- !query output
AbCDdddoooo


-- !query
SELECT mask('AbCD123-@$#', -1, -1, -1, 'o')
-- !query schema
struct<mask(AbCD123-@$#, -1, -1, -1, o):string>
-- !query output
AbCD123oooo


-- !query
SELECT mask('AbCD123-@$#', -1, -1, -1, -1)
-- !query schema
struct<mask(AbCD123-@$#, -1, -1, -1, -1):string>
-- !query output
AbCD123-@$#


-- !query
SELECT mask(NULL)
-- !query schema
struct<mask(NULL, X, x, n, -1):string>
-- !query output
NULL


-- !query
SELECT mask(NULL, -1, 'q', 'd', 'o')
-- !query schema
struct<mask(NULL, -1, q, d, o):string>
-- !query output
NULL


-- !query
SELECT mask(NULL, -1, -1, 'd', 'o')
-- !query schema
struct<mask(NULL, -1, -1, d, o):string>
-- !query output
NULL


-- !query
SELECT mask(NULL, -1, -1, -1, 'o')
-- !query schema
struct<mask(NULL, -1, -1, -1, o):string>
-- !query output
NULL


-- !query
SELECT mask(NULL, -1, -1, -1, -1)
-- !query schema
struct<mask(NULL, -1, -1, -1, -1):string>
-- !query output
NULL


-- !query
SELECT mask('AbCD123-@$#', NULL, -1, -1, -1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "upperChar",
    "sqlExpr" : "\"mask(AbCD123-@$#, NULL, -1, -1, -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 44,
    "fragment" : "mask('AbCD123-@$#', NULL, -1, -1, -1)"
  } ]
}


-- !query
SELECT mask('AbCD123-@$#', -1, NULL, -1, -1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "lowerChar",
    "sqlExpr" : "\"mask(AbCD123-@$#, -1, NULL, -1, -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 44,
    "fragment" : "mask('AbCD123-@$#', -1, NULL, -1, -1)"
  } ]
}


-- !query
SELECT mask('AbCD123-@$#', -1, -1, NULL, -1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "digitChar",
    "sqlExpr" : "\"mask(AbCD123-@$#, -1, -1, NULL, -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 44,
    "fragment" : "mask('AbCD123-@$#', -1, -1, NULL, -1)"
  } ]
}


-- !query
SELECT mask('AbCD123-@$#', -1, -1, -1, NULL)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "otherChar",
    "sqlExpr" : "\"mask(AbCD123-@$#, -1, -1, -1, NULL)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 44,
    "fragment" : "mask('AbCD123-@$#', -1, -1, -1, NULL)"
  } ]
}


-- !query
SELECT mask('AbCD123-@$#', NULL, NULL, NULL, NULL)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "upperChar",
    "sqlExpr" : "\"mask(AbCD123-@$#, NULL, NULL, NULL, NULL)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 50,
    "fragment" : "mask('AbCD123-@$#', NULL, NULL, NULL, NULL)"
  } ]
}


-- !query
SELECT mask(c1) from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, X, x, n, -1):string>
-- !query output
XxXXnnn-@$#


-- !query
SELECT mask(c1, 'Q') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, Q, x, n, -1):string>
-- !query output
QxQQnnn-@$#


-- !query
SELECT mask(c1, 'Q', 'q')from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, Q, q, n, -1):string>
-- !query output
QqQQnnn-@$#


-- !query
SELECT mask(c1, 'Q', 'q', 'd') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, Q, q, d, -1):string>
-- !query output
QqQQddd-@$#


-- !query
SELECT mask(c1, 'Q', 'q', 'd', 'o') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, Q, q, d, o):string>
-- !query output
QqQQdddoooo


-- !query
SELECT mask(c1, -1, 'q', 'd', 'o') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, -1, q, d, o):string>
-- !query output
AqCDdddoooo


-- !query
SELECT mask(c1, -1, -1, 'd', 'o') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, -1, -1, d, o):string>
-- !query output
AbCDdddoooo


-- !query
SELECT mask(c1, -1, -1, -1, 'o') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, -1, -1, -1, o):string>
-- !query output
AbCD123oooo


-- !query
SELECT mask(c1, -1, -1, -1, -1) from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<mask(c1, -1, -1, -1, -1):string>
-- !query output
AbCD123-@$#


-- !query
SELECT mask(c1, NULL, 'q', 'd', 'o') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "upperChar",
    "sqlExpr" : "\"mask(c1, NULL, q, d, o)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 36,
    "fragment" : "mask(c1, NULL, 'q', 'd', 'o')"
  } ]
}


-- !query
SELECT mask(c1, 'Q', NULL, 'd', 'o') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "lowerChar",
    "sqlExpr" : "\"mask(c1, Q, NULL, d, o)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 36,
    "fragment" : "mask(c1, 'Q', NULL, 'd', 'o')"
  } ]
}


-- !query
SELECT mask(c1, 'Q', 'q', NULL, 'o') from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "digitChar",
    "sqlExpr" : "\"mask(c1, Q, q, NULL, o)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 36,
    "fragment" : "mask(c1, 'Q', 'q', NULL, 'o')"
  } ]
}


-- !query
SELECT mask(c1, 'Q', 'q', 'd', NULL) from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "otherChar",
    "sqlExpr" : "\"mask(c1, Q, q, d, NULL)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 36,
    "fragment" : "mask(c1, 'Q', 'q', 'd', NULL)"
  } ]
}


-- !query
SELECT mask(NULL, 'Q', 'q', 'd', NULL) from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "otherChar",
    "sqlExpr" : "\"mask(NULL, Q, q, d, NULL)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 38,
    "fragment" : "mask(NULL, 'Q', 'q', 'd', NULL)"
  } ]
}


-- !query
SELECT mask(NULL, NULL, NULL, NULL, NULL) from values ('AbCD123-@$#') as tab(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_NULL",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "upperChar",
    "sqlExpr" : "\"mask(NULL, NULL, NULL, NULL, NULL)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 41,
    "fragment" : "mask(NULL, NULL, NULL, NULL, NULL)"
  } ]
}


-- !query
SELECT mask('abcd-EFGH-8765-4321')
-- !query schema
struct<mask(abcd-EFGH-8765-4321, X, x, n, -1):string>
-- !query output
xxxx-XXXX-nnnn-nnnn


-- !query
SELECT mask('abcd-EFGH-8765-4321', 'Q')
-- !query schema
struct<mask(abcd-EFGH-8765-4321, Q, x, n, -1):string>
-- !query output
xxxx-QQQQ-nnnn-nnnn


-- !query
SELECT mask('abcd-EFGH-8765-4321', 'Q', 'q')
-- !query schema
struct<mask(abcd-EFGH-8765-4321, Q, q, n, -1):string>
-- !query output
qqqq-QQQQ-nnnn-nnnn


-- !query
SELECT mask('abcd-EFGH-8765-4321', 'Q', 'q', 'd')
-- !query schema
struct<mask(abcd-EFGH-8765-4321, Q, q, d, -1):string>
-- !query output
qqqq-QQQQ-dddd-dddd


-- !query
SELECT mask('abcd-EFGH-8765-4321', 'Q', 'q', 'd', '*')
-- !query schema
struct<mask(abcd-EFGH-8765-4321, Q, q, d, *):string>
-- !query output
qqqq*QQQQ*dddd*dddd


-- !query
SELECT mask('abcd-EFGH-8765-4321', -1, 'q', 'd', '*')
-- !query schema
struct<mask(abcd-EFGH-8765-4321, -1, q, d, *):string>
-- !query output
qqqq*EFGH*dddd*dddd


-- !query
SELECT mask('abcd-EFGH-8765-4321', -1, -1, 'd', '*')
-- !query schema
struct<mask(abcd-EFGH-8765-4321, -1, -1, d, *):string>
-- !query output
abcd*EFGH*dddd*dddd


-- !query
SELECT mask('abcd-EFGH-8765-4321', -1, -1, -1, '*')
-- !query schema
struct<mask(abcd-EFGH-8765-4321, -1, -1, -1, *):string>
-- !query output
abcd*EFGH*8765*4321


-- !query
SELECT mask('abcd-EFGH-8765-4321', -1, -1, -1, -1)
-- !query schema
struct<mask(abcd-EFGH-8765-4321, -1, -1, -1, -1):string>
-- !query output
abcd-EFGH-8765-4321


-- !query
SELECT mask(NULL)
-- !query schema
struct<mask(NULL, X, x, n, -1):string>
-- !query output
NULL


-- !query
SELECT mask(NULL, -1, 'q', 'd', '*')
-- !query schema
struct<mask(NULL, -1, q, d, *):string>
-- !query output
NULL


-- !query
SELECT mask(NULL, -1, -1, 'd', '*')
-- !query schema
struct<mask(NULL, -1, -1, d, *):string>
-- !query output
NULL


-- !query
SELECT mask(NULL, -1, -1, -1, '*')
-- !query schema
struct<mask(NULL, -1, -1, -1, *):string>
-- !query output
NULL


-- !query
SELECT mask(NULL, -1, -1, -1, -1)
-- !query schema
struct<mask(NULL, -1, -1, -1, -1):string>
-- !query output
NULL


-- !query
SELECT mask(c1) from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, X, x, n, -1):string>
-- !query output
xxxx-XXXX-nnnn-nnnn


-- !query
SELECT mask(c1, 'Q') from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, Q, x, n, -1):string>
-- !query output
xxxx-QQQQ-nnnn-nnnn


-- !query
SELECT mask(c1, 'Q', 'q')from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, Q, q, n, -1):string>
-- !query output
qqqq-QQQQ-nnnn-nnnn


-- !query
SELECT mask(c1, 'Q', 'q', 'd') from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, Q, q, d, -1):string>
-- !query output
qqqq-QQQQ-dddd-dddd


-- !query
SELECT mask(c1, 'Q', 'q', 'd', '*') from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, Q, q, d, *):string>
-- !query output
qqqq*QQQQ*dddd*dddd


-- !query
SELECT mask(c1, -1, 'q', 'd', '*') from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, -1, q, d, *):string>
-- !query output
qqqq*EFGH*dddd*dddd


-- !query
SELECT mask(c1, -1, -1, 'd', '*') from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, -1, -1, d, *):string>
-- !query output
abcd*EFGH*dddd*dddd


-- !query
SELECT mask(c1, -1, -1, -1, '*') from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, -1, -1, -1, *):string>
-- !query output
abcd*EFGH*8765*4321


-- !query
SELECT mask(c1, -1, -1, -1, -1) from values ('abcd-EFGH-8765-4321') as tab(c1)
-- !query schema
struct<mask(c1, -1, -1, -1, -1):string>
-- !query output
abcd-EFGH-8765-4321


-- !query
SELECT mask(c1, replaceArg) from values('abcd-EFGH-8765-4321', 'a') as t(c1, replaceArg)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.NON_FOLDABLE_INPUT",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputExpr" : "\"replaceArg\"",
    "inputName" : "upperChar",
    "inputType" : "\"STRING\"",
    "sqlExpr" : "\"mask(c1, replaceArg, x, n, -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 27,
    "fragment" : "mask(c1, replaceArg)"
  } ]
}


-- !query
SELECT mask(c1, replaceArg) from values('abcd-EFGH-8765-4321', 'ABC') as t(c1, replaceArg)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.NON_FOLDABLE_INPUT",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputExpr" : "\"replaceArg\"",
    "inputName" : "upperChar",
    "inputType" : "\"STRING\"",
    "sqlExpr" : "\"mask(c1, replaceArg, x, n, -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 27,
    "fragment" : "mask(c1, replaceArg)"
  } ]
}


-- !query
SELECT mask(c1, replaceArg) from values('abcd-EFGH-8765-4321', 123) as t(c1, replaceArg)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.NON_FOLDABLE_INPUT",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputExpr" : "\"replaceArg\"",
    "inputName" : "upperChar",
    "inputType" : "\"STRING\"",
    "sqlExpr" : "\"mask(c1, replaceArg, x, n, -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 27,
    "fragment" : "mask(c1, replaceArg)"
  } ]
}


-- !query
SELECT mask('abcd-EFGH-8765-4321', 'A', 'w', '')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.INPUT_SIZE_NOT_ONE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "digitChar",
    "sqlExpr" : "\"mask(abcd-EFGH-8765-4321, A, w, , -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 48,
    "fragment" : "mask('abcd-EFGH-8765-4321', 'A', 'w', '')"
  } ]
}


-- !query
SELECT mask('abcd-EFGH-8765-4321', 'A', 'abc')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.INPUT_SIZE_NOT_ONE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "exprName" : "lowerChar",
    "sqlExpr" : "\"mask(abcd-EFGH-8765-4321, A, abc, n, -1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "mask('abcd-EFGH-8765-4321', 'A', 'abc')"
  } ]
}
