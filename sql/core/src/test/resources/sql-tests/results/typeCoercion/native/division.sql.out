-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW t AS SELECT 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT cast(1 as tinyint) / cast(1 as tinyint) FROM t
-- !query schema
struct<(CAST(1 AS TINYINT) / CAST(1 AS TINYINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as tinyint) / cast(1 as smallint) FROM t
-- !query schema
struct<(CAST(1 AS TINYINT) / CAST(1 AS SMALLINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as tinyint) / cast(1 as int) FROM t
-- !query schema
struct<(CAST(1 AS TINYINT) / CAST(1 AS INT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as tinyint) / cast(1 as bigint) FROM t
-- !query schema
struct<(CAST(1 AS TINYINT) / CAST(1 AS BIGINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as tinyint) / cast(1 as float) FROM t
-- !query schema
struct<(CAST(1 AS TINYINT) / CAST(1 AS FLOAT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as tinyint) / cast(1 as double) FROM t
-- !query schema
struct<(CAST(1 AS TINYINT) / CAST(1 AS DOUBLE)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as tinyint) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<(CAST(1 AS TINYINT) / CAST(1 AS DECIMAL(10,0))):decimal(14,11)>
-- !query output
1.00000000000


-- !query
SELECT cast(1 as tinyint) / cast(1 as string) FROM t
-- !query schema
struct<(CAST(1 AS TINYINT) / CAST(1 AS STRING)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as tinyint) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS TINYINT) / CAST(1 AS BINARY))\"",
    "left" : "\"TINYINT\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as tinyint) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS TINYINT) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"TINYINT\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as tinyint) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS TINYINT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"TINYINT\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as tinyint) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS TINYINT) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"TINYINT\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast(1 as smallint) / cast(1 as tinyint) FROM t
-- !query schema
struct<(CAST(1 AS SMALLINT) / CAST(1 AS TINYINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as smallint) / cast(1 as smallint) FROM t
-- !query schema
struct<(CAST(1 AS SMALLINT) / CAST(1 AS SMALLINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as smallint) / cast(1 as int) FROM t
-- !query schema
struct<(CAST(1 AS SMALLINT) / CAST(1 AS INT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as smallint) / cast(1 as bigint) FROM t
-- !query schema
struct<(CAST(1 AS SMALLINT) / CAST(1 AS BIGINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as smallint) / cast(1 as float) FROM t
-- !query schema
struct<(CAST(1 AS SMALLINT) / CAST(1 AS FLOAT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as smallint) / cast(1 as double) FROM t
-- !query schema
struct<(CAST(1 AS SMALLINT) / CAST(1 AS DOUBLE)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as smallint) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<(CAST(1 AS SMALLINT) / CAST(1 AS DECIMAL(10,0))):decimal(16,11)>
-- !query output
1.00000000000


-- !query
SELECT cast(1 as smallint) / cast(1 as string) FROM t
-- !query schema
struct<(CAST(1 AS SMALLINT) / CAST(1 AS STRING)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as smallint) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS SMALLINT) / CAST(1 AS BINARY))\"",
    "left" : "\"SMALLINT\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as smallint) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS SMALLINT) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"SMALLINT\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as smallint) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS SMALLINT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"SMALLINT\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as smallint) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS SMALLINT) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"SMALLINT\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast(1 as int) / cast(1 as tinyint) FROM t
-- !query schema
struct<(CAST(1 AS INT) / CAST(1 AS TINYINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as int) / cast(1 as smallint) FROM t
-- !query schema
struct<(CAST(1 AS INT) / CAST(1 AS SMALLINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as int) / cast(1 as int) FROM t
-- !query schema
struct<(CAST(1 AS INT) / CAST(1 AS INT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as int) / cast(1 as bigint) FROM t
-- !query schema
struct<(CAST(1 AS INT) / CAST(1 AS BIGINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as int) / cast(1 as float) FROM t
-- !query schema
struct<(CAST(1 AS INT) / CAST(1 AS FLOAT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as int) / cast(1 as double) FROM t
-- !query schema
struct<(CAST(1 AS INT) / CAST(1 AS DOUBLE)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as int) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<(CAST(1 AS INT) / CAST(1 AS DECIMAL(10,0))):decimal(21,11)>
-- !query output
1.00000000000


-- !query
SELECT cast(1 as int) / cast(1 as string) FROM t
-- !query schema
struct<(CAST(1 AS INT) / CAST(1 AS STRING)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as int) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS INT) / CAST(1 AS BINARY))\"",
    "left" : "\"INT\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as int) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS INT) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"INT\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as int) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS INT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"INT\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as int) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS INT) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"INT\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast(1 as bigint) / cast(1 as tinyint) FROM t
-- !query schema
struct<(CAST(1 AS BIGINT) / CAST(1 AS TINYINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as bigint) / cast(1 as smallint) FROM t
-- !query schema
struct<(CAST(1 AS BIGINT) / CAST(1 AS SMALLINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as bigint) / cast(1 as int) FROM t
-- !query schema
struct<(CAST(1 AS BIGINT) / CAST(1 AS INT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as bigint) / cast(1 as bigint) FROM t
-- !query schema
struct<(CAST(1 AS BIGINT) / CAST(1 AS BIGINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as bigint) / cast(1 as float) FROM t
-- !query schema
struct<(CAST(1 AS BIGINT) / CAST(1 AS FLOAT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as bigint) / cast(1 as double) FROM t
-- !query schema
struct<(CAST(1 AS BIGINT) / CAST(1 AS DOUBLE)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as bigint) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<(CAST(1 AS BIGINT) / CAST(1 AS DECIMAL(10,0))):decimal(31,11)>
-- !query output
1.00000000000


-- !query
SELECT cast(1 as bigint) / cast(1 as string) FROM t
-- !query schema
struct<(CAST(1 AS BIGINT) / CAST(1 AS STRING)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as bigint) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BIGINT) / CAST(1 AS BINARY))\"",
    "left" : "\"BIGINT\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as bigint) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BIGINT) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"BIGINT\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as bigint) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BIGINT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"BIGINT\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as bigint) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BIGINT) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"BIGINT\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast(1 as float) / cast(1 as tinyint) FROM t
-- !query schema
struct<(CAST(1 AS FLOAT) / CAST(1 AS TINYINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as float) / cast(1 as smallint) FROM t
-- !query schema
struct<(CAST(1 AS FLOAT) / CAST(1 AS SMALLINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as float) / cast(1 as int) FROM t
-- !query schema
struct<(CAST(1 AS FLOAT) / CAST(1 AS INT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as float) / cast(1 as bigint) FROM t
-- !query schema
struct<(CAST(1 AS FLOAT) / CAST(1 AS BIGINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as float) / cast(1 as float) FROM t
-- !query schema
struct<(CAST(1 AS FLOAT) / CAST(1 AS FLOAT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as float) / cast(1 as double) FROM t
-- !query schema
struct<(CAST(1 AS FLOAT) / CAST(1 AS DOUBLE)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as float) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<(CAST(1 AS FLOAT) / CAST(1 AS DECIMAL(10,0))):double>
-- !query output
1.0


-- !query
SELECT cast(1 as float) / cast(1 as string) FROM t
-- !query schema
struct<(CAST(1 AS FLOAT) / CAST(1 AS STRING)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as float) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS FLOAT) / CAST(1 AS BINARY))\"",
    "left" : "\"FLOAT\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as float) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS FLOAT) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"FLOAT\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as float) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS FLOAT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"FLOAT\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as float) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS FLOAT) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"FLOAT\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast(1 as double) / cast(1 as tinyint) FROM t
-- !query schema
struct<(CAST(1 AS DOUBLE) / CAST(1 AS TINYINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as double) / cast(1 as smallint) FROM t
-- !query schema
struct<(CAST(1 AS DOUBLE) / CAST(1 AS SMALLINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as double) / cast(1 as int) FROM t
-- !query schema
struct<(CAST(1 AS DOUBLE) / CAST(1 AS INT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as double) / cast(1 as bigint) FROM t
-- !query schema
struct<(CAST(1 AS DOUBLE) / CAST(1 AS BIGINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as double) / cast(1 as float) FROM t
-- !query schema
struct<(CAST(1 AS DOUBLE) / CAST(1 AS FLOAT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as double) / cast(1 as double) FROM t
-- !query schema
struct<(CAST(1 AS DOUBLE) / CAST(1 AS DOUBLE)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as double) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<(CAST(1 AS DOUBLE) / CAST(1 AS DECIMAL(10,0))):double>
-- !query output
1.0


-- !query
SELECT cast(1 as double) / cast(1 as string) FROM t
-- !query schema
struct<(CAST(1 AS DOUBLE) / CAST(1 AS STRING)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as double) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS DOUBLE) / CAST(1 AS BINARY))\"",
    "left" : "\"DOUBLE\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as double) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS DOUBLE) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"DOUBLE\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as double) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS DOUBLE) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"DOUBLE\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as double) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS DOUBLE) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"DOUBLE\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as tinyint) FROM t
-- !query schema
struct<(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS TINYINT)):decimal(16,6)>
-- !query output
1.000000


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as smallint) FROM t
-- !query schema
struct<(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS SMALLINT)):decimal(16,6)>
-- !query output
1.000000


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as int) FROM t
-- !query schema
struct<(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS INT)):decimal(21,11)>
-- !query output
1.00000000000


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as bigint) FROM t
-- !query schema
struct<(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS BIGINT)):decimal(31,21)>
-- !query output
1.000000000000000000000


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as float) FROM t
-- !query schema
struct<(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS FLOAT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as double) FROM t
-- !query schema
struct<(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS DOUBLE)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS DECIMAL(10,0))):decimal(21,11)>
-- !query output
1.00000000000


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as string) FROM t
-- !query schema
struct<(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS STRING)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as decimal(10, 0)) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS BINARY))\"",
    "left" : "\"DECIMAL(10,0)\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"DECIMAL(10,0)\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as decimal(10, 0)) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS DECIMAL(10,0)) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"DECIMAL(10,0)\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as decimal(10, 0)) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS DECIMAL(10,0)) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"DECIMAL(10,0)\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast(1 as string) / cast(1 as tinyint) FROM t
-- !query schema
struct<(CAST(1 AS STRING) / CAST(1 AS TINYINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as string) / cast(1 as smallint) FROM t
-- !query schema
struct<(CAST(1 AS STRING) / CAST(1 AS SMALLINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as string) / cast(1 as int) FROM t
-- !query schema
struct<(CAST(1 AS STRING) / CAST(1 AS INT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as string) / cast(1 as bigint) FROM t
-- !query schema
struct<(CAST(1 AS STRING) / CAST(1 AS BIGINT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as string) / cast(1 as float) FROM t
-- !query schema
struct<(CAST(1 AS STRING) / CAST(1 AS FLOAT)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as string) / cast(1 as double) FROM t
-- !query schema
struct<(CAST(1 AS STRING) / CAST(1 AS DOUBLE)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as string) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<(CAST(1 AS STRING) / CAST(1 AS DECIMAL(10,0))):double>
-- !query output
1.0


-- !query
SELECT cast(1 as string) / cast(1 as string) FROM t
-- !query schema
struct<(CAST(1 AS STRING) / CAST(1 AS STRING)):double>
-- !query output
1.0


-- !query
SELECT cast(1 as string) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(1 AS BINARY))\"",
    "left" : "\"DOUBLE\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as string) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"DOUBLE\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as string) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"DOUBLE\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as string) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"DOUBLE\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as tinyint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS TINYINT))\"",
    "left" : "\"BINARY\"",
    "right" : "\"TINYINT\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as smallint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS SMALLINT))\"",
    "left" : "\"BINARY\"",
    "right" : "\"SMALLINT\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as int) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS INT))\"",
    "left" : "\"BINARY\"",
    "right" : "\"INT\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as bigint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS BIGINT))\"",
    "left" : "\"BINARY\"",
    "right" : "\"BIGINT\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as float) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS FLOAT))\"",
    "left" : "\"BINARY\"",
    "right" : "\"FLOAT\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as double) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS DOUBLE))\"",
    "left" : "\"BINARY\"",
    "right" : "\"DOUBLE\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS DECIMAL(10,0)))\"",
    "left" : "\"BINARY\"",
    "right" : "\"DECIMAL(10,0)\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as string) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS STRING))\"",
    "left" : "\"BINARY\"",
    "right" : "\"DOUBLE\""
  }
}


-- !query
SELECT cast('1' as binary) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_WRONG_TYPE",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS BINARY))\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "actualDataType" : "\"BINARY\""
  }
}


-- !query
SELECT cast('1' as binary) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"BINARY\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast('1' as binary) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"BINARY\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast('1' as binary) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"BINARY\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as tinyint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS TINYINT))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"TINYINT\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as smallint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS SMALLINT))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"SMALLINT\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as int) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS INT))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"INT\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as bigint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS BIGINT))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"BIGINT\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as float) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS FLOAT))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"FLOAT\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as double) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS DOUBLE))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"DOUBLE\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS DECIMAL(10,0)))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"DECIMAL(10,0)\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as string) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS STRING))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"DOUBLE\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS BINARY))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_WRONG_TYPE",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS BOOLEAN))\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "actualDataType" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast(1 as boolean) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"BOOLEAN\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as tinyint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS TINYINT))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"TINYINT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as smallint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS SMALLINT))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"SMALLINT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as int) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS INT))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"INT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as bigint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS BIGINT))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"BIGINT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as float) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS FLOAT))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"FLOAT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as double) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS DOUBLE))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"DOUBLE\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS DECIMAL(10,0)))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"DECIMAL(10,0)\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as string) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS STRING))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"DOUBLE\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS BINARY))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_WRONG_TYPE",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "actualDataType" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "left" : "\"TIMESTAMP\"",
    "right" : "\"DATE\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as tinyint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS TINYINT))\"",
    "left" : "\"DATE\"",
    "right" : "\"TINYINT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as smallint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS SMALLINT))\"",
    "left" : "\"DATE\"",
    "right" : "\"SMALLINT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as int) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS INT))\"",
    "left" : "\"DATE\"",
    "right" : "\"INT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as bigint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS BIGINT))\"",
    "left" : "\"DATE\"",
    "right" : "\"BIGINT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as float) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS FLOAT))\"",
    "left" : "\"DATE\"",
    "right" : "\"FLOAT\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as double) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS DOUBLE))\"",
    "left" : "\"DATE\"",
    "right" : "\"DOUBLE\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as decimal(10, 0)) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS DECIMAL(10,0)))\"",
    "left" : "\"DATE\"",
    "right" : "\"DECIMAL(10,0)\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as string) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS STRING))\"",
    "left" : "\"DATE\"",
    "right" : "\"DOUBLE\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast('1' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS BINARY))\"",
    "left" : "\"DATE\"",
    "right" : "\"BINARY\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS BOOLEAN))\"",
    "left" : "\"DATE\"",
    "right" : "\"BOOLEAN\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_DIFF_TYPES",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\"",
    "left" : "\"DATE\"",
    "right" : "\"TIMESTAMP\""
  }
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH",
  "errorSubClass" : "BINARY_OP_WRONG_TYPE",
  "messageParameters" : {
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(2017-12-11 09:30:00 AS DATE))\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "actualDataType" : "\"DATE\""
  }
}
