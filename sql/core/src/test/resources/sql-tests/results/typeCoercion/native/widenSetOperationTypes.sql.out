-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW t AS SELECT 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<CAST(1 AS TINYINT):tinyint>
-- !query output
1
2


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<CAST(1 AS TINYINT):smallint>
-- !query output
1
2


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<CAST(1 AS TINYINT):int>
-- !query output
1
2


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<CAST(1 AS TINYINT):bigint>
-- !query output
1
2


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<CAST(1 AS TINYINT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<CAST(1 AS TINYINT):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<CAST(1 AS TINYINT):decimal(10,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(1 AS TINYINT):string>
-- !query output
1
2


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with tinyint at same column of first table


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with tinyint at same column of first table


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with tinyint at same column of first table


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with tinyint at same column of first table


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<CAST(1 AS SMALLINT):smallint>
-- !query output
1
2


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<CAST(1 AS SMALLINT):smallint>
-- !query output
1
2


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<CAST(1 AS SMALLINT):int>
-- !query output
1
2


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<CAST(1 AS SMALLINT):bigint>
-- !query output
1
2


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<CAST(1 AS SMALLINT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<CAST(1 AS SMALLINT):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<CAST(1 AS SMALLINT):decimal(10,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(1 AS SMALLINT):string>
-- !query output
1
2


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with smallint at same column of first table


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with smallint at same column of first table


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with smallint at same column of first table


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with smallint at same column of first table


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<CAST(1 AS INT):int>
-- !query output
1
2


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<CAST(1 AS INT):int>
-- !query output
1
2


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<CAST(1 AS INT):int>
-- !query output
1
2


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<CAST(1 AS INT):bigint>
-- !query output
1
2


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<CAST(1 AS INT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<CAST(1 AS INT):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<CAST(1 AS INT):decimal(10,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(1 AS INT):string>
-- !query output
1
2


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with int at same column of first table


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with int at same column of first table


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with int at same column of first table


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with int at same column of first table


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<CAST(1 AS BIGINT):bigint>
-- !query output
1
2


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<CAST(1 AS BIGINT):bigint>
-- !query output
1
2


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<CAST(1 AS BIGINT):bigint>
-- !query output
1
2


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<CAST(1 AS BIGINT):bigint>
-- !query output
1
2


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<CAST(1 AS BIGINT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<CAST(1 AS BIGINT):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<CAST(1 AS BIGINT):decimal(20,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(1 AS BIGINT):string>
-- !query output
1
2


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with bigint at same column of first table


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with bigint at same column of first table


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with bigint at same column of first table


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with bigint at same column of first table


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<CAST(1 AS FLOAT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<CAST(1 AS FLOAT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<CAST(1 AS FLOAT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<CAST(1 AS FLOAT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<CAST(1 AS FLOAT):float>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<CAST(1 AS FLOAT):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<CAST(1 AS FLOAT):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(1 AS FLOAT):string>
-- !query output
1.0
2


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with float at same column of first table


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with float at same column of first table


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with float at same column of first table


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with float at same column of first table


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<CAST(1 AS DOUBLE):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<CAST(1 AS DOUBLE):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<CAST(1 AS DOUBLE):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<CAST(1 AS DOUBLE):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<CAST(1 AS DOUBLE):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<CAST(1 AS DOUBLE):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<CAST(1 AS DOUBLE):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(1 AS DOUBLE):string>
-- !query output
1.0
2


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with double at same column of first table


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with double at same column of first table


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with double at same column of first table


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with double at same column of first table


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<CAST(1 AS DECIMAL(10,0)):decimal(10,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<CAST(1 AS DECIMAL(10,0)):decimal(10,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<CAST(1 AS DECIMAL(10,0)):decimal(10,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<CAST(1 AS DECIMAL(10,0)):decimal(20,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<CAST(1 AS DECIMAL(10,0)):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<CAST(1 AS DECIMAL(10,0)):double>
-- !query output
1.0
2.0


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<CAST(1 AS DECIMAL(10,0)):decimal(10,0)>
-- !query output
1
2


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(1 AS DECIMAL(10,0)):string>
-- !query output
1
2


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with decimal(10,0) at same column of first table


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with decimal(10,0) at same column of first table


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with decimal(10,0) at same column of first table


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with decimal(10,0) at same column of first table


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2.0


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2.0


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with string at same column of first table


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with string at same column of first table


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2017-12-11 09:30:00


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<CAST(1 AS STRING):string>
-- !query output
1
2017-12-11


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is tinyint type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is smallint type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is int type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is bigint type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is float type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is double type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is decimal(10,0) type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is string type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<CAST(1 AS BINARY):binary>
-- !query output
1
2


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with binary at same column of first table


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with binary at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is tinyint type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is smallint type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is int type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is bigint type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is float type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is double type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is decimal(10,0) type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is string type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<CAST(1 AS BOOLEAN):boolean>
-- !query output
true


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is timestamp type which is not compatible with boolean at same column of first table


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is date type which is not compatible with boolean at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is tinyint type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is smallint type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is int type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is bigint type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is float type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is double type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is decimal(10,0) type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(2017-12-12 09:30:00.0 AS TIMESTAMP):string>
-- !query output
2
2017-12-12 09:30:00


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with timestamp at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<CAST(2017-12-12 09:30:00.0 AS TIMESTAMP):timestamp>
-- !query output
2017-12-11 09:30:00
2017-12-12 09:30:00


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<CAST(2017-12-12 09:30:00.0 AS TIMESTAMP):timestamp>
-- !query output
2017-12-11 00:00:00
2017-12-12 09:30:00


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is tinyint type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is smallint type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as int) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is int type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is bigint type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as float) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is float type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as double) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is double type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is decimal(10,0) type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as string) FROM t
-- !query schema
struct<CAST(2017-12-12 09:30:00 AS DATE):string>
-- !query output
2
2017-12-12


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is binary type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Union can only be performed on tables with the compatible column types. The first column of the second table is boolean type which is not compatible with date at same column of first table


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query schema
struct<CAST(2017-12-12 09:30:00 AS DATE):timestamp>
-- !query output
2017-12-11 09:30:00
2017-12-12 00:00:00


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query schema
struct<CAST(2017-12-12 09:30:00 AS DATE):date>
-- !query output
2017-12-11
2017-12-12
