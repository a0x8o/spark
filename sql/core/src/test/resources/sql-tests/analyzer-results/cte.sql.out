-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view t as select * from values 0, 1, 2 as t(id)
-- !query analysis
CreateViewCommand `t`, select * from values 0, 1, 2 as t(id), false, false, LocalTempView, true
   +- Project [id#x]
      +- SubqueryAlias t
         +- LocalRelation [id#x]


-- !query
create temporary view t2 as select * from values 0, 1 as t(id)
-- !query analysis
CreateViewCommand `t2`, select * from values 0, 1 as t(id), false, false, LocalTempView, true
   +- Project [id#x]
      +- SubqueryAlias t
         +- LocalRelation [id#x]


-- !query
WITH s AS (SELECT 1 FROM s) SELECT * FROM s
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`s`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 26,
    "stopIndex" : 26,
    "fragment" : "s"
  } ]
}


-- !query
WITH r AS (SELECT (SELECT * FROM r))
SELECT * FROM r
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`r`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 34,
    "stopIndex" : 34,
    "fragment" : "r"
  } ]
}


-- !query
WITH t AS (SELECT 1 FROM t) SELECT * FROM t
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1 AS 1#x]
:        +- SubqueryAlias t
:           +- View (`t`, [id#x])
:              +- Project [cast(id#x as int) AS id#x]
:                 +- Project [id#x]
:                    +- SubqueryAlias t
:                       +- LocalRelation [id#x]
+- Project [1#x]
   +- SubqueryAlias t
      +- CTERelationRef xxxx, true, [1#x]


-- !query
WITH s1 AS (SELECT 1 FROM s2), s2 AS (SELECT 1 FROM s1) SELECT * FROM s1, s2
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`s2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 27,
    "stopIndex" : 28,
    "fragment" : "s2"
  } ]
}


-- !query
WITH t1 AS (SELECT * FROM t2), t2 AS (SELECT 2 FROM t1) SELECT * FROM t1 cross join t2
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t1
:     +- Project [id#x]
:        +- SubqueryAlias t2
:           +- View (`t2`, [id#x])
:              +- Project [cast(id#x as int) AS id#x]
:                 +- Project [id#x]
:                    +- SubqueryAlias t
:                       +- LocalRelation [id#x]
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t2
:     +- Project [2 AS 2#x]
:        +- SubqueryAlias t1
:           +- CTERelationRef xxxx, true, [id#x]
+- Project [id#x, 2#x]
   +- Join Cross
      :- SubqueryAlias t1
      :  +- CTERelationRef xxxx, true, [id#x]
      +- SubqueryAlias t2
         +- CTERelationRef xxxx, true, [2#x]


-- !query
WITH CTE1 AS (
  SELECT b.id AS id
  FROM   T2 a
         CROSS JOIN (SELECT id AS id FROM T2) b
)
SELECT t1.id AS c1,
       t2.id AS c2
FROM   CTE1 t1
       CROSS JOIN CTE1 t2
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias CTE1
:     +- Project [id#x AS id#x]
:        +- Join Cross
:           :- SubqueryAlias a
:           :  +- SubqueryAlias t2
:           :     +- View (`t2`, [id#x])
:           :        +- Project [cast(id#x as int) AS id#x]
:           :           +- Project [id#x]
:           :              +- SubqueryAlias t
:           :                 +- LocalRelation [id#x]
:           +- SubqueryAlias b
:              +- Project [id#x AS id#x]
:                 +- SubqueryAlias t2
:                    +- View (`t2`, [id#x])
:                       +- Project [cast(id#x as int) AS id#x]
:                          +- Project [id#x]
:                             +- SubqueryAlias t
:                                +- LocalRelation [id#x]
+- Project [id#x AS c1#x, id#x AS c2#x]
   +- Join Cross
      :- SubqueryAlias t1
      :  +- SubqueryAlias CTE1
      :     +- CTERelationRef xxxx, true, [id#x]
      +- SubqueryAlias t2
         +- SubqueryAlias CTE1
            +- CTERelationRef xxxx, true, [id#x]


-- !query
WITH t(x) AS (SELECT 1)
SELECT * FROM t WHERE x = 1
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x AS x#x]
:        +- Project [1 AS 1#x]
:           +- OneRowRelation
+- Project [x#x]
   +- Filter (x#x = 1)
      +- SubqueryAlias t
         +- CTERelationRef xxxx, true, [x#x]


-- !query
WITH t(x, y) AS (SELECT 1, 2)
SELECT * FROM t WHERE x = 1 AND y = 2
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x AS x#x, 2#x AS y#x]
:        +- Project [1 AS 1#x, 2 AS 2#x]
:           +- OneRowRelation
+- Project [x#x, y#x]
   +- Filter ((x#x = 1) AND (y#x = 2))
      +- SubqueryAlias t
         +- CTERelationRef xxxx, true, [x#x, y#x]


-- !query
WITH t(x, x) AS (SELECT 1, 2)
SELECT * FROM t
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x AS x#x, 2#x AS x#x]
:        +- Project [1 AS 1#x, 2 AS 2#x]
:           +- OneRowRelation
+- Project [x#x, x#x]
   +- SubqueryAlias t
      +- CTERelationRef xxxx, true, [x#x, x#x]


-- !query
WITH t() AS (SELECT 1)
SELECT * FROM t
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "')'",
    "hint" : ""
  }
}


-- !query
WITH
  t(x) AS (SELECT 1),
  t(x) AS (SELECT 2)
SELECT * FROM t
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0038",
  "messageParameters" : {
    "duplicateNames" : "'t'"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 63,
    "fragment" : "WITH\n  t(x) AS (SELECT 1),\n  t(x) AS (SELECT 2)\nSELECT * FROM t"
  } ]
}


-- !query
WITH t AS (SELECT 1 FROM non_existing_table)
SELECT 2
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`non_existing_table`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 26,
    "stopIndex" : 43,
    "fragment" : "non_existing_table"
  } ]
}


-- !query
DROP VIEW IF EXISTS t
-- !query analysis
DropTempViewCommand t


-- !query
DROP VIEW IF EXISTS t2
-- !query analysis
DropTempViewCommand t2
