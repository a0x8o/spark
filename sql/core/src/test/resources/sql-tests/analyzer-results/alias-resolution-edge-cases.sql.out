-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TABLE t1(col1 INT, col2 STRING)
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`t1`, false


-- !query
CREATE TABLE t2(col1 STRUCT<a: STRING>, a STRING)
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`t2`, false


-- !query
SELECT LEN(LOWER('X')) AS a, 1 AS b, b AS c GROUP BY LOWER('X') ORDER BY LOWER('X')
-- !query analysis
Project [a#x, b#x, c#x]
+- Sort [lower(X)#x ASC NULLS FIRST], true
   +- Project [len(lower(X)#x) AS a#x, b#x, b#x AS c#x, lower(X)#x AS lower(X)#x]
      +- Project [lower(X)#x, 1 AS b#x]
         +- Aggregate [lower(X)], [lower(X) AS lower(X)#x]
            +- OneRowRelation


-- !query
SELECT LEN(LOWER('X')) AS a, 1 AS b, b AS c GROUP BY LOWER('X') HAVING LOWER('X') = 'x'
-- !query analysis
Project [a#x, b#x, c#x]
+- Filter (lower(X)#x = x)
   +- Project [len(lower(X)#x) AS a#x, b#x, b#x AS c#x, lower(X)#x AS lower(X)#x]
      +- Project [lower(X)#x, 1 AS b#x]
         +- Aggregate [lower(X)], [lower(X) AS lower(X)#x]
            +- OneRowRelation


-- !query
SELECT col1.field, field FROM VALUES(named_struct('field', 1))
-- !query analysis
Project [field#x, field#x]
+- Project [col1#x, col1#x.field AS field#x]
   +- LocalRelation [col1#x]


-- !query
SELECT col1.field, field FROM VALUES(map('field', 1))
-- !query analysis
Project [field#x, field#x]
+- Project [col1#x, col1#x[field] AS field#x]
   +- LocalRelation [col1#x]


-- !query
SELECT COUNT(col1) as alias, SUM(col1) + alias FROM t1 GROUP BY ALL
-- !query analysis
Project [alias#xL, (sum(col1)#xL + alias#xL) AS (sum(col1) + lateralAliasReference(alias))#xL]
+- Project [count(col1)#xL, sum(col1)#xL, count(col1)#xL AS alias#xL]
   +- Aggregate [count(col1#x) AS count(col1)#xL, sum(col1#x) AS sum(col1)#xL]
      +- SubqueryAlias spark_catalog.default.t1
         +- Relation spark_catalog.default.t1[col1#x,col2#x] parquet


-- !query
SELECT COUNT(col1) as alias, SUM(col1) + alias, SUM(col1) + col1 FROM t1 GROUP BY ALL
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_ALL_IN_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 74,
    "stopIndex" : 85,
    "fragment" : "GROUP BY ALL"
  } ]
}


-- !query
DROP TABLE t1
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.t1


-- !query
DROP TABLE t2
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.t2
